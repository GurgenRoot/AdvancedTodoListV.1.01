{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport EditTaskInput from \"./EditTaskInput\";\nimport { DoneTask } from \"../doneTask/doneTask\";\nexport const TasksList = ({\n  tasks,\n  deleteTaskThunk,\n  getTasksThunk,\n  inp,\n  inputId,\n  setInputId,\n  createTaskThunk,\n  done,\n  setDone,\n  textLineThroughId,\n  setTextLineThroughId\n}) => {\n  useEffect(() => {\n    getTasksThunk();\n  }, []);\n  const [editBtnVisible, setEditBtnVisible] = useState(true);\n  const [a, b, ...c] = tasks;\n  const {\n    day,\n    id,\n    task\n  } = a;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, tasks.map(task => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item task-item\",\n      key: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }\n    }, inputId === task.id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(EditTaskInput, {\n      onSubmit: e => {\n        deleteTaskThunk(task.id);\n        createTaskThunk(task.id, e.editTask, task.day, task.time);\n        setEditBtnVisible(!editBtnVisible);\n        setInputId(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        setEditBtnVisible(!editBtnVisible);\n        setInputId(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 46\n      }\n    }, \"Back\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(DoneTask, {\n      task: task,\n      done: done,\n      setDone: setDone,\n      textLineThroughId: textLineThroughId,\n      setTextLineThroughId: setTextLineThroughId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-item_data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 52\n      }\n    }, \"added-\", task.day), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 52\n      }\n    }, task.time)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }\n    }, editBtnVisible && inputId === task.id ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        inp(task.id);\n        setEditBtnVisible(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 46\n      }\n    }, \"Edit\") : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: () => deleteTaskThunk(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, \"Remove\")));\n  })));\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx"],"names":["React","useEffect","useState","EditTaskInput","DoneTask","TasksList","tasks","deleteTaskThunk","getTasksThunk","inp","inputId","setInputId","createTaskThunk","done","setDone","textLineThroughId","setTextLineThroughId","editBtnVisible","setEditBtnVisible","a","b","c","day","id","task","map","e","editTask","time"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport EditTaskInput from \"./EditTaskInput\";\nimport {DoneTask} from \"../doneTask/doneTask\";\n\nexport const TasksList = (\n    {tasks,deleteTaskThunk,getTasksThunk,inp,inputId,setInputId,createTaskThunk,done,setDone, textLineThroughId,setTextLineThroughId}\n    ) => {\n    useEffect(() => {\n        getTasksThunk()\n    },[])\n\n    const [editBtnVisible, setEditBtnVisible] = useState(true)\n\n    const [a,b,...c] = tasks\n    const {day,id,task} = a\n    return(\n        <div>\n            <ul className=\"list-group\">\n              {\n                 tasks.map((task)=> {\n                     return (\n                         <li className=\"list-group-item task-item\" key={task.id}>\n                               <div>\n                                   {\n                                       inputId === task.id\n                                           ?\n                                           <div>\n                                             <EditTaskInput  onSubmit = {\n                                               (e) => {\n                                                   deleteTaskThunk(task.id)\n                                                   createTaskThunk(task.id, e.editTask, task.day, task.time)\n                                                   setEditBtnVisible(!editBtnVisible);\n                                                   setInputId(null)\n                                               }}\n                                             />\n\n                                             <button className='btn btn-primary' onClick={ () => {\n                                                 setEditBtnVisible(!editBtnVisible);\n                                                 setInputId(null);\n                                             }}>Back</button>\n                                           </div>\n                                           : <div>\n                                               <DoneTask\n                                                   task={task}\n                                                   done={done}\n                                                   setDone={setDone}\n                                                   textLineThroughId={textLineThroughId}\n                                                   setTextLineThroughId={setTextLineThroughId}\n                                               />\n                                               <div className='task-item_data'>\n                                                   <span>added-{task.day}</span>\n                                                   <small>{task.time}</small>\n                                               </div>\n                                             </div>\n                                   }\n\n                               </div>\n\n                               <div>\n                                   {\n                                       editBtnVisible && inputId === task.id\n                                           ? <button className='btn btn-primary' onClick={() => {\n                                                inp(task.id);\n                                                setEditBtnVisible(true)\n                                           }}>Edit</button>\n                                       : null\n                                   }\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteTaskThunk(task.id)}>Remove</button>\n                               </div>\n\n                         </li>\n                     )\n                 })\n              }\n            </ul>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}