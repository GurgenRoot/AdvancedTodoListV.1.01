{"ast":null,"code":"import { aboutTask } from \"../DAL/dal\";\nimport { Dispatch } from 'redux';\nconst CREATE_TASK = 'create-task/reducer/CREATE_TASK';\nconst initialstate = {\n  tasks: [{\n    id: 1,\n    task: 'create ToDo app'\n  }, {\n    id: 2,\n    task: 'add to hosting'\n  }]\n};\nexport const createTaskReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case CREATE_TASK:\n      return { ...state,\n        tasks: action.task // tasks: [...state.tasks, {...action.payload}]\n\n      };\n\n    default:\n      return state;\n  }\n};\nexport const createTaskAC = task => ({\n  type: CREATE_TASK,\n  task\n});\nexport const createTaskThunk = (id, task) => {\n  return async dispatch => {\n    const response = await aboutTask.postTask(id, task);\n    const Tasks = response.data.name;\n    dispatch(createTaskAC(Tasks));\n  };\n};\nexport const getTasksThunk = () => {\n  return async dispatch => {\n    const response = await aboutTask.getTask();\n    const name = response.data;\n    console.log(name, 'NAME'); // dispatch(createTaskAC(response.data))\n    // dispatch(createTaskAC(response))\n    // .map( (key,index) => {\n    //     return {\n    //         name: key,\n    //     }\n    // })\n    // const name = key.map(key => key.name);\n\n    console.log(response, 'REDponse'); // console.log(name,'Test')\n  }; // onClick={getTasksThunk() required}\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/store/createTaskReducer.js"],"names":["aboutTask","Dispatch","CREATE_TASK","initialstate","tasks","id","task","createTaskReducer","state","action","type","createTaskAC","createTaskThunk","dispatch","response","postTask","Tasks","data","name","getTasksThunk","getTask","console","log"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,MAAMC,WAAW,GAAG,iCAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE;AAAb,GADG,EAEH;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAE;AAAb,GAFG;AADU,CAArB;AAOA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAACL,YAAP,EAAoBM,MAApB,KAA+B;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHJ,QAAAA,KAAK,EAAEK,MAAM,CAACH,IAFX,CAGH;;AAHG,OAAP;;AAKJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXM;AAcP,OAAO,MAAMG,YAAY,GAAIL,IAAD,KAAW;AAACI,EAAAA,IAAI,EAAER,WAAP;AAAoBI,EAAAA;AAApB,CAAX,CAArB;AAEP,OAAO,MAAMM,eAAe,GAAG,CAACP,EAAD,EAAIC,IAAJ,KAAa;AACxC,SAAO,MAAOO,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMd,SAAS,CAACe,QAAV,CAAmBV,EAAnB,EAAsBC,IAAtB,CAAvB;AACA,UAAMU,KAAK,GAAGF,QAAQ,CAACG,IAAT,CAAcC,IAA5B;AACAL,IAAAA,QAAQ,CAACF,YAAY,CAACK,KAAD,CAAb,CAAR;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMG,aAAa,GAAI,MAAM;AAChC,SAAO,MAAON,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMd,SAAS,CAACoB,OAAV,EAAvB;AACA,UAAMF,IAAI,GAAGJ,QAAQ,CAACG,IAAtB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAiB,MAAjB,EAHuB,CAInB;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAqB,UAArB,EAfuB,CAgBvB;AACH,GAjBD,CADgC,CAmBhC;AACH,CApBM","sourcesContent":["import {aboutTask} from \"../DAL/dal\";\nimport {Dispatch} from 'redux'\n\nconst CREATE_TASK = 'create-task/reducer/CREATE_TASK';\n\nconst initialstate = {\n    tasks: [\n        {id:1, task: 'create ToDo app'},\n        {id:2, task: 'add to hosting'},\n    ]\n}\n\nexport const createTaskReducer = (state=initialstate,action) => {\n    switch (action.type) {\n        case CREATE_TASK:\n            return {\n                ...state,\n                tasks: action.task\n                // tasks: [...state.tasks, {...action.payload}]\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const createTaskAC = (task) => ({type: CREATE_TASK, task })\n\nexport const createTaskThunk = (id,task) => {\n    return async (dispatch) => {\n        const response = await aboutTask.postTask(id,task)\n        const Tasks = response.data.name\n        dispatch(createTaskAC(Tasks))\n    }\n}\n\nexport const getTasksThunk =  () => {\n    return async (dispatch) => {\n        const response = await aboutTask.getTask()\n        const name = response.data\n        console.log(name,'NAME')\n            // dispatch(createTaskAC(response.data))\n\n\n\n        // dispatch(createTaskAC(response))\n        // .map( (key,index) => {\n        //     return {\n        //         name: key,\n        //     }\n        // })\n        // const name = key.map(key => key.name);\n        console.log(response,'REDponse')\n        // console.log(name,'Test')\n    }\n    // onClick={getTasksThunk() required}\n}\n\n"]},"metadata":{},"sourceType":"module"}