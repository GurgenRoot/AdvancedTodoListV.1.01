{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/TasksList/TasksListContainer.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { TasksList } from \"./TasksList\";\nimport { connect } from \"react-redux\";\nimport { deleteTaskThunk, getTasksThunk, createTaskThunk, completeTaskThunk } from \"../../store/createTaskReducer\";\nimport { day, time } from \"../TaskCreateInput/TaskCreateInputContainer\";\n\nconst mapStateToProps = store => {\n  return {\n    tasks: store.createTaskReducer.tasks //.filter(task => task.task === 'Task')\n\n  };\n};\n\nconst TaskListContainer = ({\n  tasks,\n  deleteTaskThunk,\n  getTasksThunk,\n  createTaskThunk,\n  completeTaskThunk\n}) => {\n  const task = Object.values(tasks);\n  const getFilteredTask = tasks.filter(task => task.task === 'task');\n  console.log(getFilteredTask, 'R task'); // const task = Object.entries(tasks).map(task => task[1])\n  // const assign = Object.assign({},valuses[0],{a:'test'})\n  // console.log(Object.is(valuses,valuses[1],'ObjectIs'))\n\n  const [inputId, setInputId] = useState(null);\n\n  const inp = id => {\n    const t = tasks.filter(task => task.id === id);\n    setInputId(t[0].id);\n  }; // const onCheckingTaskHandler = () => {\n  //     return\n  // }\n\n\n  console.log('RENDER TASKSLISTCONTAINER!1!');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => {// console.log(getFilteredTask.filter(task => task === getFilteredTask.includes(e.target.value)))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TasksList, {\n    tasks: task,\n    deleteTaskThunk: deleteTaskThunk,\n    getTasksThunk: getTasksThunk,\n    createTaskThunk: createTaskThunk,\n    completeTaskThunk: completeTaskThunk,\n    inp: inp,\n    setInputId: setInputId,\n    inputId: inputId,\n    setCompletedTaskDay: day,\n    setCompletedTaskTime: time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default connect(mapStateToProps, {\n  deleteTaskThunk,\n  getTasksThunk,\n  createTaskThunk,\n  completeTaskThunk\n})(TaskListContainer);","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksListContainer.jsx"],"names":["React","useEffect","useState","TasksList","connect","deleteTaskThunk","getTasksThunk","createTaskThunk","completeTaskThunk","day","time","mapStateToProps","store","tasks","createTaskReducer","TaskListContainer","task","Object","values","getFilteredTask","filter","console","log","inputId","setInputId","inp","id","t","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,EAAyBC,aAAzB,EAAuCC,eAAvC,EAAuDC,iBAAvD,QAA+E,+BAA/E;AACA,SAAQC,GAAR,EAAaC,IAAb,QAAwB,6CAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAM;AACFC,IAAAA,KAAK,EAAED,KAAK,CAACE,iBAAN,CAAwBD,KAD7B,CACmC;;AADnC,GAAN;AAGH,CAJD;;AAMA,MAAME,iBAAiB,GAAG,CAAC;AAACF,EAAAA,KAAD;AAAOR,EAAAA,eAAP;AAAuBC,EAAAA,aAAvB;AAAqCC,EAAAA,eAArC;AAAqDC,EAAAA;AAArD,CAAD,KAA6E;AACnG,QAAMQ,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcL,KAAd,CAAb;AAEA,QAAMM,eAAe,GAAGN,KAAK,CAACO,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACA,IAAL,KAAc,MAAnC,CAAxB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ,EAA4B,QAA5B,EALmG,CAMnG;AACA;AACA;;AAEA,QAAM,CAACI,OAAD,EAAWC,UAAX,IAA0BtB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMuB,GAAG,GAAIC,EAAD,IAAQ;AAChB,UAAMC,CAAC,GAAGd,KAAK,CAACO,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACU,EAAL,KAAYA,EAAjC,CAAV;AACAF,IAAAA,UAAU,CAACG,CAAC,CAAC,CAAD,CAAD,CAAKD,EAAN,CAAV;AACH,GAHD,CAZmG,CAiBnG;AACA;AACA;;;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEM,CAAC,IAAI,CAC9B;AAEH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEZ,IAAlB;AACW,IAAA,eAAe,EAAEX,eAD5B;AAEW,IAAA,aAAa,EAAEC,aAF1B;AAGW,IAAA,eAAe,EAAIC,eAH9B;AAIW,IAAA,iBAAiB,EAAEC,iBAJ9B;AAKW,IAAA,GAAG,EAAIiB,GALlB;AAMW,IAAA,UAAU,EAAID,UANzB;AAOW,IAAA,OAAO,EAAID,OAPtB;AAQW,IAAA,mBAAmB,EAAEd,GARhC;AASW,IAAA,oBAAoB,EAAEC,IATjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAmBH,CAxCD;;AA0CA,eAAeN,OAAO,CAACO,eAAD,EAAiB;AAACN,EAAAA,eAAD;AAAiBC,EAAAA,aAAjB;AAA+BC,EAAAA,eAA/B;AAA+CC,EAAAA;AAA/C,CAAjB,CAAP,CAA2FO,iBAA3F,CAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {TasksList} from \"./TasksList\";\nimport {connect} from \"react-redux\";\nimport {deleteTaskThunk, getTasksThunk,createTaskThunk,completeTaskThunk} from \"../../store/createTaskReducer\";\nimport {day, time} from \"../TaskCreateInput/TaskCreateInputContainer\";\n\nconst mapStateToProps = (store) => {\n    return{\n        tasks: store.createTaskReducer.tasks //.filter(task => task.task === 'Task')\n    }\n}\n\nconst TaskListContainer = ({tasks,deleteTaskThunk,getTasksThunk,createTaskThunk,completeTaskThunk}) => {\n    const task = Object.values(tasks)\n\n    const getFilteredTask = tasks.filter(task => task.task === 'task')\n\n    console.log(getFilteredTask,'R task')\n    // const task = Object.entries(tasks).map(task => task[1])\n    // const assign = Object.assign({},valuses[0],{a:'test'})\n    // console.log(Object.is(valuses,valuses[1],'ObjectIs'))\n\n    const [inputId , setInputId ] = useState(null)\n\n    const inp = (id) => {\n        const t = tasks.filter(task => task.id === id)\n        setInputId(t[0].id)\n    }\n\n    // const onCheckingTaskHandler = () => {\n    //     return\n    // }\n    console.log('RENDER TASKSLISTCONTAINER!1!')\n    return (\n        <div>\n            <input type=\"text\" onChange={e => {\n                // console.log(getFilteredTask.filter(task => task === getFilteredTask.includes(e.target.value)))\n\n            } }/>\n            <TasksList tasks={task}\n                       deleteTaskThunk={deleteTaskThunk}\n                       getTasksThunk={getTasksThunk}\n                       createTaskThunk = {createTaskThunk}\n                       completeTaskThunk={completeTaskThunk}\n                       inp = {inp}\n                       setInputId = {setInputId}\n                       inputId = {inputId}\n                       setCompletedTaskDay={day}\n                       setCompletedTaskTime={time}\n            />\n        </div>\n    )\n};\n\nexport default connect(mapStateToProps,{deleteTaskThunk,getTasksThunk,createTaskThunk,completeTaskThunk})(TaskListContainer)"]},"metadata":{},"sourceType":"module"}