{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/doneTask/doneTask.jsx\";\nimport React, { useEffect } from \"react\";\nimport './doneTask.scss';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal);\nexport const DoneTask = ({\n  task,\n  doneTestsThunk,\n  getTasksThunk,\n  completedTaskDay,\n  completedTaskTime\n}) => {\n  useEffect(() => {\n    getTasksThunk();\n  }, [doneTestsThunk]);\n  console.log(task, 'DONETASK');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: task.completedTask ? `task-item_text text` : `task-item_text`,\n    onClick: () => {\n      MySwal.fire({\n        title: \"! HEY did you complete this tasks?\",\n        text: 'Check it',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: `Yes, I\\'ve done!`\n      }).then(result => {\n        if (result.value) {\n          Swal.fire('Congratulations!', 'OK You can move on to other task.', 'success');\n          doneTestsThunk(task.id, completedTaskDay, completedTaskTime, true);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, task.task);\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/doneTask/doneTask.jsx"],"names":["React","useEffect","Swal","withReactContent","MySwal","DoneTask","task","doneTestsThunk","getTasksThunk","completedTaskDay","completedTaskTime","console","log","completedTask","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAEA,MAAMC,MAAM,GAAGD,gBAAgB,CAACD,IAAD,CAA/B;AAEA,OAAO,MAAMG,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,cAAN;AAAqBC,EAAAA,aAArB;AAAmCC,EAAAA,gBAAnC;AAAoDC,EAAAA;AAApD,CAAD,KAA4E;AAChGT,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,aAAa;AAChB,GAFQ,EAEP,CAACD,cAAD,CAFO,CAAT;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAAkB,UAAlB;AACA,sBACI;AAAK,IAAA,SAAS,EAAGA,IAAI,CAACO,aAAL,GAAsB,qBAAtB,GAA8C,gBAA/D;AACK,IAAA,OAAO,EAAG,MAAM;AACZT,MAAAA,MAAM,CAACU,IAAP,CAAY;AACRC,QAAAA,KAAK,EAAG,oCADA;AAERC,QAAAA,IAAI,EAAE,UAFE;AAGRC,QAAAA,IAAI,EAAE,UAHE;AAIRC,QAAAA,gBAAgB,EAAE,IAJV;AAKRC,QAAAA,kBAAkB,EAAE,SALZ;AAMRC,QAAAA,iBAAiB,EAAE,MANX;AAORC,QAAAA,iBAAiB,EAAG;AAPZ,OAAZ,EAQGC,IARH,CAQSC,MAAD,IAAY;AAChB,YAAIA,MAAM,CAACC,KAAX,EAAkB;AACdtB,UAAAA,IAAI,CAACY,IAAL,CACI,kBADJ,EAEI,mCAFJ,EAGI,SAHJ;AAKAP,UAAAA,cAAc,CAACD,IAAI,CAACmB,EAAN,EAAShB,gBAAT,EAA0BC,iBAA1B,EAA4C,IAA5C,CAAd;AACH;AACJ,OAjBD;AAkBH,KApBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBKJ,IAAI,CAACA,IAtBV,CADJ;AA0BH,CA/BM","sourcesContent":["import React, {useEffect} from \"react\";\nimport './doneTask.scss';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nexport const DoneTask = ({task,doneTestsThunk,getTasksThunk,completedTaskDay,completedTaskTime}) => {\n    useEffect(() => {\n        getTasksThunk()\n    },[doneTestsThunk])\n    console.log(task, 'DONETASK')\n    return(\n        <div className= {task.completedTask ? `task-item_text text` : `task-item_text` }\n             onClick={ () => {\n                 MySwal.fire({\n                     title:  \"! HEY did you complete this tasks?\",\n                     text: 'Check it',\n                     icon: 'question',\n                     showCancelButton: true,\n                     confirmButtonColor: '#3085d6',\n                     cancelButtonColor: '#d33',\n                     confirmButtonText: `Yes, I\\'ve done!`\n                 }).then((result) => {\n                     if (result.value) {\n                         Swal.fire(\n                             'Congratulations!',\n                             'OK You can move on to other task.',\n                             'success'\n                         )\n                         doneTestsThunk(task.id,completedTaskDay,completedTaskTime,true)\n                     }\n                 })\n             }}\n        >\n            {task.task}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}