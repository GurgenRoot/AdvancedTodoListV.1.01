{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Settings } from \"./pages/Settings\";\nimport { Header } from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport { connect } from \"react-redux\";\nimport { getTasksThunk } from \"./store/createTaskReducer\";\n\nfunction App({\n  getTasksThunk\n}) {\n  useEffect(() => {\n    getTasksThunk();\n  }, []);\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: '/',\n    exact: true,\n    render: () => /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: '/settings',\n    render: () => /*#__PURE__*/React.createElement(Settings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default connect(null, {\n  getTasksThunk\n})(App);","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/App.js"],"names":["React","useEffect","BrowserRouter","Switch","Route","Settings","Header","Home","connect","getTasksThunk","App"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA0C,kBAA1C;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;;AAEA,SAASC,GAAT,CAAa;AAACD,EAAAA;AAAD,CAAb,EAA8B;AAC1BR,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAGF,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,GAAb;AAAkB,IAAA,KAAK,MAAvB;AAAwB,IAAA,MAAM,EAAE,mBAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,WAAb;AAA2B,IAAA,MAAM,EAAE,mBAAM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF,CADF;AAWD;;AACD,eAAeD,OAAO,CAAC,IAAD,EAAM;AAACC,EAAAA;AAAD,CAAN,CAAP,CAA8BC,GAA9B,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {BrowserRouter,Switch, Route} from \"react-router-dom\";\nimport {Settings} from \"./pages/Settings\";\nimport {Header} from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport {connect} from \"react-redux\";\nimport {getTasksThunk} from \"./store/createTaskReducer\";\n\nfunction App({getTasksThunk}) {\n    useEffect(() => {\n        getTasksThunk()\n    },[])\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <Header/>\n        <Switch>\n          <Route path={'/'} exact render={() => <Home/>}/>\n          <Route path={'/settings'}  render={() => <Settings/>}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default connect(null,{getTasksThunk})(App)"]},"metadata":{},"sourceType":"module"}