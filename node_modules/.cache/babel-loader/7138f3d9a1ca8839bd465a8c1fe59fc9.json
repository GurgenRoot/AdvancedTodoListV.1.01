{"ast":null,"code":"import axios from'axios';var instance=axios.create({baseURL:'https://todo-list-db-5fe9b.firebaseio.com/'});export var aboutTask={TasksCount:function TasksCount(task){var day=new Date().toLocaleDateString();var time=new Date().toLocaleTimeString();return instance.post('notes/count.json',{task:task,day:day,time:time}).then(function(response){return response;});},postTask:function postTask(task,edited){var day=new Date().toLocaleDateString();var time=new Date().toLocaleTimeString();// return required\nreturn instance.post('notes/tasks.json',{task:task,day:day,time:time,edited:edited}).then(function(response){return response;});},getTask:function getTask(){// return required\nreturn instance.get('notes/tasks.json').then(function(response){return response;});},deleteTask:function deleteTask(id){// return required\nreturn instance.delete(\"notes/tasks/\".concat(id,\".json\")).then(function(response){return response;});},doneTasks:function doneTasks(id,completed){var completedTaskDay=new Date().toLocaleDateString();var completedTaskTime=new Date().toLocaleTimeString();return instance.post(\"notes/tasks/\".concat(id,\"/completedTask.json\"),{completedTaskDay:completedTaskDay,completedTaskTime:completedTaskTime,completed:completed}).then(function(response){return response;});}};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/DAL/dal.js"],"names":["axios","instance","create","baseURL","aboutTask","TasksCount","task","day","Date","toLocaleDateString","time","toLocaleTimeString","post","then","response","postTask","edited","getTask","get","deleteTask","id","delete","doneTasks","completed","completedTaskDay","completedTaskTime"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC1BC,OAAO,CAAE,4CADiB,CAAb,CAAjB,CAIA,MAAO,IAAMC,CAAAA,SAAS,CAAG,CACrBC,UADqB,qBACVC,IADU,CACJ,CACb,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,EAAZ,CACA,GAAMC,CAAAA,IAAI,CAAG,GAAIF,CAAAA,IAAJ,GAAWG,kBAAX,EAAb,CACA,MAAOV,CAAAA,QAAQ,CAACW,IAAT,CAAc,kBAAd,CAAiC,CAACN,IAAI,CAAJA,IAAD,CAAMC,GAAG,CAAHA,GAAN,CAAUG,IAAI,CAAJA,IAAV,CAAjC,EAAkDG,IAAlD,CAAuD,SAAAC,QAAQ,QAAIA,CAAAA,QAAJ,EAA/D,CAAP,CACH,CALoB,CAOrBC,QAPqB,mBAOZT,IAPY,CAOPU,MAPO,CAOC,CAClB,GAAMT,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,kBAAX,EAAZ,CACA,GAAMC,CAAAA,IAAI,CAAG,GAAIF,CAAAA,IAAJ,GAAWG,kBAAX,EAAb,CACA;AACA,MAAOV,CAAAA,QAAQ,CAACW,IAAT,CAAc,kBAAd,CAAiC,CAACN,IAAI,CAAJA,IAAD,CAAMC,GAAG,CAAHA,GAAN,CAAUG,IAAI,CAAJA,IAAV,CAAeM,MAAM,CAANA,MAAf,CAAjC,EAAyDH,IAAzD,CAA8D,SAAAC,QAAQ,QAAIA,CAAAA,QAAJ,EAAtE,CAAP,CACH,CAZoB,CAarBG,OAbqB,mBAaX,CACN;AACA,MAAOhB,CAAAA,QAAQ,CAACiB,GAAT,CAAa,kBAAb,EAAiCL,IAAjC,CAAsC,SAAAC,QAAQ,QAAIA,CAAAA,QAAJ,EAA9C,CAAP,CACH,CAhBoB,CAkBrBK,UAlBqB,qBAkBVC,EAlBU,CAkBN,CACX;AACA,MAAOnB,CAAAA,QAAQ,CAACoB,MAAT,uBAA+BD,EAA/B,WAA0CP,IAA1C,CAA+C,SAAAC,QAAQ,QAAIA,CAAAA,QAAJ,EAAvD,CAAP,CACH,CArBoB,CAuBrBQ,SAvBqB,oBAuBXF,EAvBW,CAuBRG,SAvBQ,CAuBG,CACpB,GAAMC,CAAAA,gBAAgB,CAAG,GAAIhB,CAAAA,IAAJ,GAAWC,kBAAX,EAAzB,CACA,GAAMgB,CAAAA,iBAAiB,CAAG,GAAIjB,CAAAA,IAAJ,GAAWG,kBAAX,EAA1B,CACA,MAAOV,CAAAA,QAAQ,CAACW,IAAT,uBAA6BQ,EAA7B,wBAAqD,CAACI,gBAAgB,CAAhBA,gBAAD,CAAkBC,iBAAiB,CAAjBA,iBAAlB,CAAoCF,SAAS,CAATA,SAApC,CAArD,EAAqGV,IAArG,CAA0G,SAAAC,QAAQ,QAAIA,CAAAA,QAAJ,EAAlH,CAAP,CACH,CA3BoB,CAAlB","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://todo-list-db-5fe9b.firebaseio.com/',\n})\n\nexport const aboutTask = {\n    TasksCount(task) {\n        const day = new Date().toLocaleDateString()\n        const time = new Date().toLocaleTimeString()\n        return instance.post('notes/count.json',{task,day,time}).then(response => response)\n    },\n\n    postTask(task,edited) {\n        const day = new Date().toLocaleDateString()\n        const time = new Date().toLocaleTimeString()\n        // return required\n        return instance.post('notes/tasks.json',{task,day,time,edited}).then(response => response)\n    },\n    getTask() {\n        // return required\n        return instance.get('notes/tasks.json').then(response => response)\n    },\n\n    deleteTask(id) {\n        // return required\n        return instance.delete(`notes/tasks/${id}.json`).then(response => response)\n    },\n\n    doneTasks(id,completed) {\n        const completedTaskDay = new Date().toLocaleDateString()\n        const completedTaskTime = new Date().toLocaleTimeString()\n        return instance.post(`notes/tasks/${id}/completedTask.json`,{completedTaskDay,completedTaskTime,completed}).then(response => response)\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}