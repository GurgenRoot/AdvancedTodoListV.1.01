{"ast":null,"code":"import React from\"react\";import Swal from'sweetalert2';import withReactContent from'sweetalert2-react-content';import{CheckIcon}from\"../CheckIcons\";var MySwal=withReactContent(Swal);export var DeleteAlertComponent=function DeleteAlertComponent(_ref){var deleteTaskThunk=_ref.deleteTaskThunk,task=_ref.task;return/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-danger\",onClick:function onClick(){MySwal.fire({title:'Are you sure?',text:\"You won't be able to revert this!\",icon:'warning',showCancelButton:true,confirmButtonColor:'#3085d6',cancelButtonColor:'#d33',confirmButtonText:'Yes, delete it!'}).then(function(result){if(result.value){Swal.fire('Deleted!','Your task has been deleted.','success');deleteTaskThunk(task.id);}});}},\"Remove\");};export var CompletedTaskAlert=function CompletedTaskAlert(_ref2){var completeTaskThunk=_ref2.completeTaskThunk,task=_ref2.task;return/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){MySwal.fire({title:\"! HEY did you complete this tasks?\",text:'Check it',icon:'question',showCancelButton:true,confirmButtonColor:'#3085d6',cancelButtonColor:'#d33',confirmButtonText:\"Yes, I've done!\"}).then(function(result){if(result.value){Swal.fire('Congratulations!','OK You can move on to other task.','success');completeTaskThunk(task.id);}});}},/*#__PURE__*/React.createElement(CheckIcon,{color:'grey'}));};export var TaskCreatedAlert=function TaskCreatedAlert(){return Swal.fire({position:'center',icon:'success',title:'Your task has been created',showConfirmButton:false,timer:1500});};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/AlertComponent/AlertComponent.jsx"],"names":["React","Swal","withReactContent","CheckIcon","MySwal","DeleteAlertComponent","deleteTaskThunk","task","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","id","CompletedTaskAlert","completeTaskThunk","TaskCreatedAlert","position","showConfirmButton","timer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CACA,OAAQC,SAAR,KAAwB,eAAxB,CAEA,GAAMC,CAAAA,MAAM,CAAGF,gBAAgB,CAACD,IAAD,CAA/B,CAEA,MAAO,IAAMI,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAA4B,IAA1BC,CAAAA,eAA0B,MAA1BA,eAA0B,CAAVC,IAAU,MAAVA,IAAU,CAC5D,mBACI,8BAAQ,IAAI,CAAC,QAAb,CACQ,SAAS,CAAC,gBADlB,CAEQ,OAAO,CAAE,kBAAM,CACXH,MAAM,CAACI,IAAP,CAAY,CACRC,KAAK,CAAE,eADC,CAERC,IAAI,CAAE,mCAFE,CAGRC,IAAI,CAAE,SAHE,CAIRC,gBAAgB,CAAE,IAJV,CAKRC,kBAAkB,CAAE,SALZ,CAMRC,iBAAiB,CAAE,MANX,CAORC,iBAAiB,CAAE,iBAPX,CAAZ,EAQGC,IARH,CAQQ,SAACC,MAAD,CAAY,CAChB,GAAIA,MAAM,CAACC,KAAX,CAAkB,CACdjB,IAAI,CAACO,IAAL,CACI,UADJ,CAEI,6BAFJ,CAGI,SAHJ,EAKAF,eAAe,CAACC,IAAI,CAACY,EAAN,CAAf,CACH,CACJ,CAjBD,EAkBH,CArBT,WADJ,CA2BH,CA5BM,CA8BP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,OAA8B,IAA5BC,CAAAA,iBAA4B,OAA5BA,iBAA4B,CAAVd,IAAU,OAAVA,IAAU,CAC5D,mBACI,2BAAK,OAAO,CAAG,kBAAM,CACjBH,MAAM,CAACI,IAAP,CAAY,CACRC,KAAK,CAAG,oCADA,CAERC,IAAI,CAAE,UAFE,CAGRC,IAAI,CAAE,UAHE,CAIRC,gBAAgB,CAAE,IAJV,CAKRC,kBAAkB,CAAE,SALZ,CAMRC,iBAAiB,CAAE,MANX,CAORC,iBAAiB,kBAPT,CAAZ,EAQGC,IARH,CAQQ,SAACC,MAAD,CAAY,CAChB,GAAIA,MAAM,CAACC,KAAX,CAAkB,CACdjB,IAAI,CAACO,IAAL,CACI,kBADJ,CAEI,mCAFJ,CAGI,SAHJ,EAKAa,iBAAiB,CAACd,IAAI,CAACY,EAAN,CAAjB,CACH,CACJ,CAjBD,EAkBH,CAnBD,eAqBI,oBAAC,SAAD,EAAW,KAAK,CAAE,MAAlB,EArBJ,CADJ,CAyBH,CA1BM,CA4BP,MAAO,IAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAClC,MACIrB,CAAAA,IAAI,CAACO,IAAL,CAAU,CACNe,QAAQ,CAAE,QADJ,CAENZ,IAAI,CAAE,SAFA,CAGNF,KAAK,CAAE,4BAHD,CAINe,iBAAiB,CAAE,KAJb,CAKNC,KAAK,CAAE,IALD,CAAV,CADJ,CASH,CAVM","sourcesContent":["import React from \"react\";\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport {CheckIcon} from \"../CheckIcons\";\n\nconst MySwal = withReactContent(Swal);\n\nexport const DeleteAlertComponent = ({deleteTaskThunk,task}) => {\n    return(\n        <button type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={() => {\n                    MySwal.fire({\n                        title: 'Are you sure?',\n                        text: \"You won't be able to revert this!\",\n                        icon: 'warning',\n                        showCancelButton: true,\n                        confirmButtonColor: '#3085d6',\n                        cancelButtonColor: '#d33',\n                        confirmButtonText: 'Yes, delete it!'\n                    }).then((result) => {\n                        if (result.value) {\n                            Swal.fire(\n                                'Deleted!',\n                                'Your task has been deleted.',\n                                'success'\n                            )\n                            deleteTaskThunk(task.id)\n                        }\n                    })\n                }}\n        >\n            Remove\n        </button>\n    )\n}\n\nexport const CompletedTaskAlert = ({completeTaskThunk,task}) => {\n    return(\n        <div onClick={ () => {\n            MySwal.fire({\n                title:  \"! HEY did you complete this tasks?\",\n                text: 'Check it',\n                icon: 'question',\n                showCancelButton: true,\n                confirmButtonColor: '#3085d6',\n                cancelButtonColor: '#d33',\n                confirmButtonText: `Yes, I've done!`\n            }).then((result) => {\n                if (result.value) {\n                    Swal.fire(\n                        'Congratulations!',\n                        'OK You can move on to other task.',\n                        'success'\n                    )\n                    completeTaskThunk(task.id)\n                }\n            })\n        }}\n        >\n            <CheckIcon color={'grey'}/>\n        </div>\n    )\n}\n\nexport const TaskCreatedAlert = () => {\n    return(\n        Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: 'Your task has been created',\n            showConfirmButton: false,\n            timer: 1500\n        })\n    )\n}\n"]},"metadata":{},"sourceType":"module"}