{"ast":null,"code":"import { aboutTask } from \"../DAL/dal\";\nconst CREATE_TASK = 'create-task/reducer/CREATE_TASK';\nconst initialState = {\n  tasks: [{\n    day: \"4/20/2020\",\n    id: \"-M5Krk2e9e5Rw7a7hpsE\",\n    task: \"asdasdasdasd\",\n    time: \"8:35:45 AM\"\n  }]\n};\nexport const createTaskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_TASK:\n      return { ...state,\n        tasks: action.task\n      };\n\n    default:\n      return state;\n  }\n};\nexport const createTaskAC = task => ({\n  type: CREATE_TASK,\n  task\n});\nexport const createTaskThunk = (id, task, day, time, edited = null, completeDay = null, completeTime = null) => {\n  return async dispatch => {\n    const response = await aboutTask.postTask(id, task, day, time, edited, completeDay, completeTime);\n  };\n};\nexport const getTasksThunk = () => {\n  return async dispatch => {\n    const response = await aboutTask.getTask();\n    const key = Object.keys(response.data).map(key => {\n      return { ...response.data[key],\n        id: key\n      };\n    });\n\n    if (response.status === 200) {\n      dispatch(createTaskAC(key));\n    }\n  }; // onClick={getTasksThunk() required}\n};\nexport const deleteTaskThunk = id => {\n  return async dispatch => {\n    const response = await aboutTask.deleteTask(id);\n\n    if (response.status === 200) {\n      dispatch(getTasksThunk());\n    }\n  };\n};\nexport const doneTests = (id, completeDay, completeTime) => {\n  return async dispatch => {\n    const response = await aboutTask.doneTasks(id, completeDay, completeTime);\n    const key = Object.keys(response.data).map(key => {\n      return { ...response.data[key],\n        DoneTaskId: key\n      };\n    });\n  };\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/store/createTaskReducer.js"],"names":["aboutTask","CREATE_TASK","initialState","tasks","day","id","task","time","createTaskReducer","state","action","type","createTaskAC","createTaskThunk","edited","completeDay","completeTime","dispatch","response","postTask","getTasksThunk","getTask","key","Object","keys","data","map","status","deleteTaskThunk","deleteTask","doneTests","doneTasks","DoneTaskId"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AAEA,MAAMC,WAAW,GAAG,iCAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAAC;AAACC,IAAAA,GAAG,EAAE,WAAN;AAAmBC,IAAAA,EAAE,EAAE,sBAAvB;AAA+CC,IAAAA,IAAI,EAAE,cAArD;AAAqEC,IAAAA,IAAI,EAAE;AAA3E,GAAD;AADU,CAArB;AAIA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAACP,YAAP,EAAoBQ,MAApB,KAA+B;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACJ;AAFX,OAAP;;AAIJ;AACI,aAAOG,KAAP;AAPR;AASH,CAVM;AAYP,OAAO,MAAMG,YAAY,GAAIN,IAAD,KAAW;AAACK,EAAAA,IAAI,EAAEV,WAAP;AAAoBK,EAAAA;AAApB,CAAX,CAArB;AAEP,OAAO,MAAMO,eAAe,GAAG,CAACR,EAAD,EAAIC,IAAJ,EAASF,GAAT,EAAaG,IAAb,EAAmBO,MAAM,GAAE,IAA3B,EAAiCC,WAAW,GAAC,IAA7C,EAAkDC,YAAY,GAAC,IAA/D,KAAwE;AACnG,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAACmB,QAAV,CAAmBd,EAAnB,EAAsBC,IAAtB,EAA2BF,GAA3B,EAA+BG,IAA/B,EAAoCO,MAApC,EAA2CC,WAA3C,EAAuDC,YAAvD,CAAvB;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMI,aAAa,GAAI,MAAM;AAEhC,SAAO,MAAOH,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAACqB,OAAV,EAAvB;AACA,UAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYN,QAAQ,CAACO,IAArB,EAA2BC,GAA3B,CAA+BJ,GAAG,IAAI;AAC9C,aAAO,EACH,GAAGJ,QAAQ,CAACO,IAAT,CAAcH,GAAd,CADA;AAEHjB,QAAAA,EAAE,EAAGiB;AAFF,OAAP;AAIH,KALW,CAAZ;;AAMA,QAAIJ,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;AACzBV,MAAAA,QAAQ,CAACL,YAAY,CAACU,GAAD,CAAb,CAAR;AACH;AACJ,GAXD,CAFgC,CAchC;AACH,CAfM;AAiBP,OAAO,MAAMM,eAAe,GAAIvB,EAAD,IAAQ;AACnC,SAAO,MAAOY,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAAC6B,UAAV,CAAqBxB,EAArB,CAAvB;;AACA,QAAIa,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;AACzBV,MAAAA,QAAQ,CAACG,aAAa,EAAd,CAAR;AACH;AACJ,GALD;AAMH,CAPM;AASP,OAAO,MAAMU,SAAS,GAAG,CAACzB,EAAD,EAAIU,WAAJ,EAAgBC,YAAhB,KAAiC;AACtD,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAAC+B,SAAV,CAAoB1B,EAApB,EAAuBU,WAAvB,EAAmCC,YAAnC,CAAvB;AACA,UAAMM,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYN,QAAQ,CAACO,IAArB,EAA2BC,GAA3B,CAA+BJ,GAAG,IAAI;AAC9C,aAAO,EACH,GAAGJ,QAAQ,CAACO,IAAT,CAAcH,GAAd,CADA;AAEHU,QAAAA,UAAU,EAAEV;AAFT,OAAP;AAKH,KANW,CAAZ;AAOH,GATD;AAUH,CAXM","sourcesContent":["import {aboutTask} from \"../DAL/dal\";\n\nconst CREATE_TASK = 'create-task/reducer/CREATE_TASK';\n\nconst initialState = {\n    tasks: [{day: \"4/20/2020\", id: \"-M5Krk2e9e5Rw7a7hpsE\", task: \"asdasdasdasd\", time: \"8:35:45 AM\"}]\n}\n\nexport const createTaskReducer = (state=initialState,action) => {\n    switch (action.type) {\n        case CREATE_TASK:\n            return {\n                ...state,\n                tasks: action.task\n            }\n        default:\n            return state\n    }\n}\n\nexport const createTaskAC = (task) => ({type: CREATE_TASK, task })\n\nexport const createTaskThunk = (id,task,day,time, edited= null, completeDay=null,completeTime=null) => {\n    return async (dispatch) => {\n        const response = await aboutTask.postTask(id,task,day,time,edited,completeDay,completeTime)\n    }\n}\n\nexport const getTasksThunk =  () => {\n\n    return async (dispatch) => {\n        const response = await aboutTask.getTask()\n        const key = Object.keys(response.data).map(key => {\n            return {\n                ...response.data[key],\n                id : key\n            }\n        })\n        if (response.status === 200) {\n            dispatch(createTaskAC(key))\n        }\n    }\n    // onClick={getTasksThunk() required}\n}\n\nexport const deleteTaskThunk = (id) => {\n    return async (dispatch) => {\n        const response = await aboutTask.deleteTask(id)\n        if (response.status === 200) {\n            dispatch(getTasksThunk())\n        }\n    }\n}\n\nexport const doneTests = (id,completeDay,completeTime) => {\n    return async (dispatch) => {\n        const response = await aboutTask.doneTasks(id,completeDay,completeTime)\n        const key = Object.keys(response.data).map(key => {\n            return {\n                ...response.data[key],\n                DoneTaskId: key\n            }\n\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}