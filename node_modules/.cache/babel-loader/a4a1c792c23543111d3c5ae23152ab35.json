{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/doneTask/doneTask.jsx\";\nimport React from \"react\";\nimport './doneTask.scss';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal);\nexport const DoneTask = ({\n  task,\n  done,\n  setDone,\n  textLineThroughId,\n  setTextLineThroughId,\n  doneTestsThunk,\n  completedTaskDay,\n  completedTaskTime\n}) => {\n  console.log(task, 'DONETASK');\n\n  if (task.completedTask) {\n    console.log(Object.values(task.completedTask), 'Completed');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, task.completedTask ? Object.values(task.completedTask) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: task.completedTask && textLineThroughId === task.id ? `task-item_text text` : `task-item_text`,\n    onClick: () => {\n      MySwal.fire({\n        title: \"! HEY did you complete this tasks?\",\n        text: 'Check it',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: `Yes, I\\'ve done!`\n      }).then(result => {\n        if (result.value) {\n          Swal.fire('Congratulations!', 'OK You can move on to other task.', 'success');\n          setTextLineThroughId(task.id);\n          doneTestsThunk(task.id, completedTaskDay, completedTaskTime, true);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, task.task));\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/doneTask/doneTask.jsx"],"names":["React","Swal","withReactContent","MySwal","DoneTask","task","done","setDone","textLineThroughId","setTextLineThroughId","doneTestsThunk","completedTaskDay","completedTaskTime","console","log","completedTask","Object","values","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAEA,MAAMC,MAAM,GAAGD,gBAAgB,CAACD,IAAD,CAA/B;AAEA,OAAO,MAAMG,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,IAAN;AAAWC,EAAAA,OAAX;AAAmBC,EAAAA,iBAAnB;AAAqCC,EAAAA,oBAArC;AAA0DC,EAAAA,cAA1D;AAAyEC,EAAAA,gBAAzE;AAA0FC,EAAAA;AAA1F,CAAD,KAAkH;AACtIC,EAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAAkB,UAAlB;;AACA,MAAIA,IAAI,CAACU,aAAT,EAAwB;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACC,MAAP,CAAcZ,IAAI,CAACU,aAAnB,CAAZ,EAA+C,WAA/C;AAEH;;AAED,sBACI,0CACKV,IAAI,CAACU,aAAL,GAAqBC,MAAM,CAACC,MAAP,CAAcZ,IAAI,CAACU,aAAnB,CAArB,GAAyD,IAD9D,eAEQ;AACI,IAAA,SAAS,EAAEV,IAAI,CAACU,aAAL,IAAsBP,iBAAiB,KAAKH,IAAI,CAACa,EAAjD,GAAuD,qBAAvD,GAA+E,gBAD9F;AAEI,IAAA,OAAO,EAAE,MAAM;AACXf,MAAAA,MAAM,CAACgB,IAAP,CAAY;AACRC,QAAAA,KAAK,EAAE,oCADC;AAERC,QAAAA,IAAI,EAAE,UAFE;AAGRC,QAAAA,IAAI,EAAE,UAHE;AAIRC,QAAAA,gBAAgB,EAAE,IAJV;AAKRC,QAAAA,kBAAkB,EAAE,SALZ;AAMRC,QAAAA,iBAAiB,EAAE,MANX;AAORC,QAAAA,iBAAiB,EAAG;AAPZ,OAAZ,EAQGC,IARH,CAQSC,MAAD,IAAY;AAChB,YAAIA,MAAM,CAACC,KAAX,EAAkB;AACd5B,UAAAA,IAAI,CAACkB,IAAL,CACI,kBADJ,EAEI,mCAFJ,EAGI,SAHJ;AAKAV,UAAAA,oBAAoB,CAACJ,IAAI,CAACa,EAAN,CAApB;AACAR,UAAAA,cAAc,CAACL,IAAI,CAACa,EAAN,EAAUP,gBAAV,EAA4BC,iBAA5B,EAA+C,IAA/C,CAAd;AACH;AACJ,OAlBD;AAmBH,KAtBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBKP,IAAI,CAACA,IAxBV,CAFR,CADJ;AAgCH,CAvCM","sourcesContent":["import React from \"react\";\nimport './doneTask.scss';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nexport const DoneTask = ({task,done,setDone,textLineThroughId,setTextLineThroughId,doneTestsThunk,completedTaskDay,completedTaskTime}) => {\n    console.log(task, 'DONETASK')\n    if (task.completedTask) {\n        console.log(Object.values(task.completedTask), 'Completed')\n\n    }\n\n    return(\n        <>\n            {task.completedTask ? Object.values(task.completedTask) : null }\n                <div\n                    className={task.completedTask && textLineThroughId === task.id ? `task-item_text text` : `task-item_text`}\n                    onClick={() => {\n                        MySwal.fire({\n                            title: \"! HEY did you complete this tasks?\",\n                            text: 'Check it',\n                            icon: 'question',\n                            showCancelButton: true,\n                            confirmButtonColor: '#3085d6',\n                            cancelButtonColor: '#d33',\n                            confirmButtonText: `Yes, I\\'ve done!`\n                        }).then((result) => {\n                            if (result.value) {\n                                Swal.fire(\n                                    'Congratulations!',\n                                    'OK You can move on to other task.',\n                                    'success'\n                                )\n                                setTextLineThroughId(task.id)\n                                doneTestsThunk(task.id, completedTaskDay, completedTaskTime, true)\n                            }\n                        })\n                    }}\n                >\n                    {task.task}\n                </div>\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}