{"ast":null,"code":"import _slicedToArray from\"/home/gurgen/Desktop/new-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import'./TaskList.scss';import EditTaskInput from\"./EditTaskInput\";import{CompletedTask}from\"../CompletedTasks/completedTask\";import{RemoveItemComponent}from\"./RemoveItemComponent/RemoveItemComponent\";import{Bounce}from\"react-reveal\";import{TaskAddedTime,TaskCompleteTime}from\"../CompletedTasks/TaskDayAndTime\";import{EditButton,GoBackButton}from\"../Buttons/Buttons\";export var TasksList=function TasksList(_ref){var tasks=_ref.tasks,deleteTaskThunk=_ref.deleteTaskThunk,getTasksThunk=_ref.getTasksThunk,inpId=_ref.inpId,inputId=_ref.inputId,setInputId=_ref.setInputId,createTaskThunk=_ref.createTaskThunk,completeTaskThunk=_ref.completeTaskThunk,setCompletedTaskDay=_ref.setCompletedTaskDay,setCompletedTaskTime=_ref.setCompletedTaskTime;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),editBtnVisible=_useState2[0],setEditBtnVisible=_useState2[1];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group\"},tasks.map(function(task){return/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item task-item\",key:task.id},/*#__PURE__*/React.createElement(\"div\",{className:\"task-item\"},inputId===task.id?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(EditTaskInput,{onSubmit:function onSubmit(e){deleteTaskThunk(task.id);createTaskThunk(e.editTask,true);setEditBtnVisible(!editBtnVisible);setInputId(null);}})):/*#__PURE__*/React.createElement(Bounce,{top:true},/*#__PURE__*/React.createElement(\"div\",{className:\"list-item_btn\"},/*#__PURE__*/React.createElement(CompletedTask,{task:task,completeTaskThunk:completeTaskThunk,getTasksThunk:getTasksThunk,setCompletedTaskDay:setCompletedTaskDay,setCompletedTaskTime:setCompletedTaskTime}),/*#__PURE__*/React.createElement(TaskAddedTime,{task:task}),/*#__PURE__*/React.createElement(TaskCompleteTime,{task:task})))),/*#__PURE__*/React.createElement(\"div\",{className:\"list-item_btn\"},editBtnVisible&&inputId===task.id?/*#__PURE__*/React.createElement(GoBackButton,{setEditBtnVisible:setEditBtnVisible,editBtnVisible:editBtnVisible,setInputId:setInputId}):/*#__PURE__*/React.createElement(Bounce,{left:true},/*#__PURE__*/React.createElement(EditButton,{task:task,setEditBtnVisible:setEditBtnVisible,inpId:inpId})),/*#__PURE__*/React.createElement(Bounce,{right:true},/*#__PURE__*/React.createElement(RemoveItemComponent,{deleteTaskThunk:deleteTaskThunk,task:task}))));})));};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx"],"names":["React","useState","EditTaskInput","CompletedTask","RemoveItemComponent","Bounce","TaskAddedTime","TaskCompleteTime","EditButton","GoBackButton","TasksList","tasks","deleteTaskThunk","getTasksThunk","inpId","inputId","setInputId","createTaskThunk","completeTaskThunk","setCompletedTaskDay","setCompletedTaskTime","editBtnVisible","setEditBtnVisible","map","task","id","e","editTask"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,iBAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAAQC,aAAR,KAA4B,iCAA5B,CACA,OAAQC,mBAAR,KAAkC,2CAAlC,CACA,OAAQC,MAAR,KAAqB,cAArB,CACA,OAAQC,aAAR,CAAuBC,gBAAvB,KAA8C,kCAA9C,CACA,OAAQC,UAAR,CAAoBC,YAApB,KAAuC,oBAAvC,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAGf,IAFJC,CAAAA,KAEI,MAFJA,KAEI,CAFEC,eAEF,MAFEA,eAEF,CAFkBC,aAElB,MAFkBA,aAElB,CAFgCC,KAEhC,MAFgCA,KAEhC,CAFsCC,OAEtC,MAFsCA,OAEtC,CAF8CC,UAE9C,MAF8CA,UAE9C,CADJC,eACI,MADJA,eACI,CADYC,iBACZ,MADYA,iBACZ,CAD8BC,mBAC9B,MAD8BA,mBAC9B,CADkDC,oBAClD,MADkDA,oBAClD,eACsCnB,QAAQ,CAAC,IAAD,CAD9C,wCACCoB,cADD,eACiBC,iBADjB,eAEN,mBACI,4CACI,0BAAI,SAAS,CAAC,YAAd,EAEKX,KAAK,CAACY,GAAN,CAAU,SAACC,IAAD,CAAS,CACf,mBACI,0BAAI,SAAS,CAAC,2BAAd,CAA0C,GAAG,CAAEA,IAAI,CAACC,EAApD,eAEM,2BAAK,SAAS,CAAC,WAAf,EAEQV,OAAO,GAAKS,IAAI,CAACC,EAAjB,cAEI,4CACE,oBAAC,aAAD,EAAgB,QAAQ,CACtB,kBAACC,CAAD,CAAO,CACHd,eAAe,CAACY,IAAI,CAACC,EAAN,CAAf,CACAR,eAAe,CAACS,CAAC,CAACC,QAAH,CAAY,IAAZ,CAAf,CACAL,iBAAiB,CAAC,CAACD,cAAF,CAAjB,CACAL,UAAU,CAAC,IAAD,CAAV,CACH,CANH,EADF,CAFJ,cAYM,oBAAC,MAAD,EAAQ,GAAG,KAAX,eACE,2BAAK,SAAS,CAAC,eAAf,eACI,oBAAC,aAAD,EACI,IAAI,CAAEQ,IADV,CAEI,iBAAiB,CAAEN,iBAFvB,CAGI,aAAa,CAAIL,aAHrB,CAII,mBAAmB,CAAIM,mBAJ3B,CAKI,oBAAoB,CAAIC,oBAL5B,EADJ,cAQI,oBAAC,aAAD,EAAe,IAAI,CAAEI,IAArB,EARJ,cASI,oBAAC,gBAAD,EAAkB,IAAI,CAAEA,IAAxB,EATJ,CADF,CAdd,CAFN,cAgCM,2BAAK,SAAS,CAAC,eAAf,EAEQH,cAAc,EAAIN,OAAO,GAAKS,IAAI,CAACC,EAAnC,cACE,oBAAC,YAAD,EAAc,iBAAiB,CAAEH,iBAAjC,CACc,cAAc,CAAED,cAD9B,CAEc,UAAU,CAAEL,UAF1B,EADF,cAIE,oBAAC,MAAD,EAAQ,IAAI,KAAZ,eACE,oBAAC,UAAD,EAAY,IAAI,CAAEQ,IAAlB,CAAwB,iBAAiB,CAAEF,iBAA3C,CAA8D,KAAK,CAAER,KAArE,EADF,CANV,cAUI,oBAAC,MAAD,EAAQ,KAAK,KAAb,eAAc,oBAAC,mBAAD,EAAqB,eAAe,CAAGF,eAAvC,CAAwD,IAAI,CAAGY,IAA/D,EAAd,CAVJ,CAhCN,CADJ,CAgDH,CAjDD,CAFL,CADJ,CADJ,CA0DH,CA/DM","sourcesContent":["import React, {useState} from \"react\";\nimport './TaskList.scss';\nimport EditTaskInput from \"./EditTaskInput\";\nimport {CompletedTask} from \"../CompletedTasks/completedTask\";\nimport {RemoveItemComponent} from \"./RemoveItemComponent/RemoveItemComponent\";\nimport {Bounce} from \"react-reveal\";\nimport {TaskAddedTime, TaskCompleteTime} from \"../CompletedTasks/TaskDayAndTime\";\nimport {EditButton, GoBackButton} from \"../Buttons/Buttons\";\n\nexport const TasksList = (\n    { tasks,deleteTaskThunk,getTasksThunk,inpId,inputId,setInputId,\n      createTaskThunk,completeTaskThunk,setCompletedTaskDay,setCompletedTaskTime\n    }) => {\n    const [editBtnVisible, setEditBtnVisible] = useState(true)\n    return(\n        <div>\n            <ul className=\"list-group\">\n              {\n                 tasks.map((task)=> {\n                     return (\n                         <li className=\"list-group-item task-item\" key={task.id}>\n\n                               <div className='task-item'>\n                                   {\n                                       inputId === task.id\n                                           ?\n                                           <div>\n                                             <EditTaskInput  onSubmit = {\n                                               (e) => {\n                                                   deleteTaskThunk(task.id)\n                                                   createTaskThunk(e.editTask,true)\n                                                   setEditBtnVisible(!editBtnVisible)\n                                                   setInputId(null)\n                                               }}\n                                             />\n                                           </div>\n                                           : <Bounce top>\n                                               <div className='list-item_btn'>\n                                                   <CompletedTask\n                                                       task={task}\n                                                       completeTaskThunk={completeTaskThunk}\n                                                       getTasksThunk = {getTasksThunk}\n                                                       setCompletedTaskDay = {setCompletedTaskDay}\n                                                       setCompletedTaskTime = {setCompletedTaskTime}\n                                                   />\n                                                   <TaskAddedTime task={task}/>\n                                                   <TaskCompleteTime task={task}/>\n                                               </div>\n                                            </Bounce>\n                                   }\n                               </div>\n\n                               <div className='list-item_btn'>\n                                   {\n                                       editBtnVisible && inputId === task.id\n                                       ? <GoBackButton setEditBtnVisible={setEditBtnVisible}\n                                                       editBtnVisible={editBtnVisible}\n                                                       setInputId={setInputId} />\n                                       : <Bounce left>\n                                           <EditButton task={task} setEditBtnVisible={setEditBtnVisible} inpId={inpId}/>\n                                         </Bounce>\n                                   }\n                                   <Bounce right><RemoveItemComponent deleteTaskThunk ={deleteTaskThunk} task ={task}/></Bounce>\n                               </div>\n\n                         </li>\n                     )\n                 })\n              }\n            </ul>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}