{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/TasksList/TasksListContainer.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { TasksList } from \"./TasksList\";\nimport { connect } from \"react-redux\";\nimport { deleteTaskThunk, getTasksThunk, createTaskThunk } from \"../../store/createTaskReducer\";\n\nconst TaskListContainer = ({\n  tasks,\n  deleteTaskThunk,\n  getTasksThunk,\n  createTaskThunk\n}) => {\n  useEffect(() => {\n    getTasksThunk();\n  }, []);\n  const task = Object.values(tasks); // const task = Object.entries(tasks).map(task => task[1])\n  // const assign = Object.assign({},valuses[0],{a:'test'})\n  // console.log(Object.is(valuses,valuses[1],'ObjectIs'))\n\n  const [inputId, setInputId] = useState(null);\n\n  const inp = id => {\n    const t = tasks.filter(task => task.id === id);\n    setInputId(t[0].id);\n  };\n\n  console.log('RENDER TASKSLISTCONTAINER');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TasksList, {\n    tasks: task,\n    deleteTaskThunk: deleteTaskThunk,\n    getTasksThunk: getTasksThunk,\n    createTaskThunk: createTaskThunk,\n    inp: inp,\n    setInputId: setInputId,\n    inputId: inputId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default connect(null, {\n  deleteTaskThunk,\n  getTasksThunk,\n  createTaskThunk\n})(TaskListContainer);","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksListContainer.jsx"],"names":["React","useEffect","useState","TasksList","connect","deleteTaskThunk","getTasksThunk","createTaskThunk","TaskListContainer","tasks","task","Object","values","inputId","setInputId","inp","id","t","filter","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,EAAyBC,aAAzB,EAAuCC,eAAvC,QAA6D,+BAA7D;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOJ,EAAAA,eAAP;AAAuBC,EAAAA,aAAvB;AAAqCC,EAAAA;AAArC,CAAD,KAA2D;AAEjFN,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAMI,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcH,KAAd,CAAb,CANiF,CAQjF;AACA;AACA;;AAEA,QAAM,CAACI,OAAD,EAAWC,UAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMa,GAAG,GAAIC,EAAD,IAAQ;AAChB,UAAMC,CAAC,GAAGR,KAAK,CAACS,MAAN,CAAaR,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYA,EAAjC,CAAV;AACAF,IAAAA,UAAU,CAACG,CAAC,CAAC,CAAD,CAAD,CAAKD,EAAN,CAAV;AACH,GAHD;;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEV,IAAlB;AACW,IAAA,eAAe,EAAEL,eAD5B;AAEW,IAAA,aAAa,EAAEC,aAF1B;AAGW,IAAA,eAAe,EAAIC,eAH9B;AAIW,IAAA,GAAG,EAAIQ,GAJlB;AAKW,IAAA,UAAU,EAAID,UALzB;AAMW,IAAA,OAAO,EAAID,OANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAYH,CA/BD;;AAiCA,eAAeT,OAAO,CAAC,IAAD,EAAM;AAACC,EAAAA,eAAD;AAAiBC,EAAAA,aAAjB;AAA+BC,EAAAA;AAA/B,CAAN,CAAP,CAA8DC,iBAA9D,CAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {TasksList} from \"./TasksList\";\nimport {connect} from \"react-redux\";\nimport {deleteTaskThunk, getTasksThunk,createTaskThunk} from \"../../store/createTaskReducer\";\n\nconst TaskListContainer = ({tasks,deleteTaskThunk,getTasksThunk,createTaskThunk}) => {\n\n    useEffect(() => {\n        getTasksThunk()\n    },[])\n\n    const task = Object.values(tasks)\n\n    // const task = Object.entries(tasks).map(task => task[1])\n    // const assign = Object.assign({},valuses[0],{a:'test'})\n    // console.log(Object.is(valuses,valuses[1],'ObjectIs'))\n\n    const [inputId , setInputId ] = useState(null)\n\n    const inp = (id) => {\n        const t = tasks.filter(task => task.id === id)\n        setInputId(t[0].id)\n    }\n    console.log('RENDER TASKSLISTCONTAINER')\n    return (\n        <div>\n            <TasksList tasks={task}\n                       deleteTaskThunk={deleteTaskThunk}\n                       getTasksThunk={getTasksThunk}\n                       createTaskThunk = {createTaskThunk}\n                       inp = {inp}\n                       setInputId = {setInputId}\n                       inputId = {inputId}\n            />\n        </div>\n    )\n};\n\nexport default connect(null,{deleteTaskThunk,getTasksThunk,createTaskThunk})(TaskListContainer)"]},"metadata":{},"sourceType":"module"}