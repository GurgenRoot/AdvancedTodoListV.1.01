{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/TasksList/TasksListContainer.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { TasksList } from \"./TasksList\";\nimport { connect } from \"react-redux\";\nimport { deleteTaskThunk, getTasksThunk, createTaskThunk, completeTaskThunk } from \"../../store/createTaskReducer\";\nimport { SearchInput } from \"../SearchInput/SearchInput\";\n\nconst mapStateToProps = store => {\n  return {\n    tasks: store.createTaskReducer.tasks //.filter(task => task.task === 'Task')\n\n  };\n};\n\nconst TaskListContainer = ({\n  tasks,\n  deleteTaskThunk,\n  getTasksThunk,\n  createTaskThunk,\n  completeTaskThunk\n}) => {\n  const [targetValue, setTargetValue] = useState('');\n  const task = Object.values(tasks).filter(task => task.task.includes(targetValue));\n  const [inputId, setInputId] = useState(null);\n\n  const inpId = id => {\n    const task = tasks.filter(task => task.id === id);\n    setInputId(task[0].id);\n  };\n\n  console.log('RENDER TASKSLISTCONTAINER!1!');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    setTargetValue: setTargetValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TasksList, {\n    tasks: task || null,\n    deleteTaskThunk: deleteTaskThunk,\n    getTasksThunk: getTasksThunk,\n    createTaskThunk: createTaskThunk,\n    completeTaskThunk: completeTaskThunk,\n    inpId: inpId,\n    setInputId: setInputId,\n    inputId: inputId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default connect(mapStateToProps, {\n  deleteTaskThunk,\n  getTasksThunk,\n  createTaskThunk,\n  completeTaskThunk\n})(TaskListContainer);","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksListContainer.jsx"],"names":["React","useEffect","useState","TasksList","connect","deleteTaskThunk","getTasksThunk","createTaskThunk","completeTaskThunk","SearchInput","mapStateToProps","store","tasks","createTaskReducer","TaskListContainer","targetValue","setTargetValue","task","Object","values","filter","includes","inputId","setInputId","inpId","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,EAAyBC,aAAzB,EAAuCC,eAAvC,EAAuDC,iBAAvD,QAA+E,+BAA/E;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAM;AACFC,IAAAA,KAAK,EAAED,KAAK,CAACE,iBAAN,CAAwBD,KAD7B,CACmC;;AADnC,GAAN;AAGH,CAJD;;AAMA,MAAME,iBAAiB,GAAG,CAAC;AAACF,EAAAA,KAAD;AAAOP,EAAAA,eAAP;AAAuBC,EAAAA,aAAvB;AAAqCC,EAAAA,eAArC;AAAqDC,EAAAA;AAArD,CAAD,KAA6E;AAEnG,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMe,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqBQ,MAArB,CAA4BH,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUI,QAAV,CAAmBN,WAAnB,CAApC,CAAb;AAEA,QAAM,CAACO,OAAD,EAAWC,UAAX,IAA0BrB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMsB,KAAK,GAAIC,EAAD,IAAQ;AAClB,UAAMR,IAAI,GAAGL,KAAK,CAACQ,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACQ,EAAL,KAAYA,EAAjC,CAAb;AACAF,IAAAA,UAAU,CAACN,IAAI,CAAC,CAAD,CAAJ,CAAQQ,EAAT,CAAV;AACH,GAHD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,cAAc,EAAGX,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEC,IAAI,IAAI,IAA1B;AACW,IAAA,eAAe,EAAEZ,eAD5B;AAEW,IAAA,aAAa,EAAEC,aAF1B;AAGW,IAAA,eAAe,EAAIC,eAH9B;AAIW,IAAA,iBAAiB,EAAEC,iBAJ9B;AAKW,IAAA,KAAK,EAAIgB,KALpB;AAMW,IAAA,UAAU,EAAID,UANzB;AAOW,IAAA,OAAO,EAAID,OAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAuBH,CArCD;;AAuCA,eAAelB,OAAO,CAACM,eAAD,EAAiB;AAACL,EAAAA,eAAD;AAAiBC,EAAAA,aAAjB;AAA+BC,EAAAA,eAA/B;AAA+CC,EAAAA;AAA/C,CAAjB,CAAP,CAA2FM,iBAA3F,CAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {TasksList} from \"./TasksList\";\nimport {connect} from \"react-redux\";\nimport {deleteTaskThunk, getTasksThunk,createTaskThunk,completeTaskThunk} from \"../../store/createTaskReducer\";\nimport {SearchInput} from \"../SearchInput/SearchInput\";\n\nconst mapStateToProps = (store) => {\n    return{\n        tasks: store.createTaskReducer.tasks //.filter(task => task.task === 'Task')\n    }\n}\n\nconst TaskListContainer = ({tasks,deleteTaskThunk,getTasksThunk,createTaskThunk,completeTaskThunk}) => {\n\n    const [targetValue, setTargetValue] = useState('')\n\n    const task = Object.values(tasks).filter(task => task.task.includes(targetValue) )\n\n    const [inputId , setInputId ] = useState(null)\n\n    const inpId = (id) => {\n        const task = tasks.filter(task => task.id === id)\n        setInputId(task[0].id)\n    }\n\n    console.log('RENDER TASKSLISTCONTAINER!1!')\n    return (\n        <div>\n            <SearchInput setTargetValue ={setTargetValue}/>\n            <TasksList tasks={task || null}\n                       deleteTaskThunk={deleteTaskThunk}\n                       getTasksThunk={getTasksThunk}\n                       createTaskThunk = {createTaskThunk}\n                       completeTaskThunk={completeTaskThunk}\n                       inpId = {inpId}\n                       setInputId = {setInputId}\n                       inputId = {inputId}/>\n\n            {/*{tasks === undefined ? <TasksList tasks={task}*/}\n            {/*                   deleteTaskThunk={deleteTaskThunk}*/}\n            {/*                   getTasksThunk={getTasksThunk}*/}\n            {/*                   createTaskThunk = {createTaskThunk}*/}\n            {/*                   completeTaskThunk={completeTaskThunk}*/}\n            {/*                   inpId = {inpId}*/}\n            {/*                   setInputId = {setInputId}*/}\n            {/*                   inputId = {inputId}*/}\n            {/*/> : <div className='no-task'>NO TASK</div>}*/}\n        </div>\n    )\n};\n\nexport default connect(mapStateToProps,{deleteTaskThunk,getTasksThunk,createTaskThunk,completeTaskThunk})(TaskListContainer)"]},"metadata":{},"sourceType":"module"}