{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/TasksList/TaskContainer.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Task from \"./EditTaskInput\";\nimport { createTaskThunk, getTasksThunk } from \"../../store/createTaskReducer\";\nimport { TaskItem } from \"./TaskItem\";\nconst date = new Date();\n\nconst mapStateToProps = store => {\n  return {\n    tasks: store.createTaskReducer.tasks\n  };\n};\n\nconst TaskContainer = ({\n  getTasksThunk,\n  createTaskThunk\n}) => {\n  const [id, setId] = useState(date.toLocaleTimeString());\n  const day = date.toLocaleDateString();\n  const time = date.toLocaleTimeString();\n  const [editTask, setEditTask] = useState(false); // useEffect(() => {\n  //     getTasksThunk();\n  // },[getTasksThunk()])\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, !editTask ? /*#__PURE__*/React.createElement(Task, {\n    onSubmit: e => {\n      createTaskThunk(id, e.tasks, day, time);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(TaskItem, {\n    setEditTask: setEditTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default connect(mapStateToProps, {\n  createTaskThunk,\n  getTasksThunk\n})(TaskContainer);","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TaskContainer.jsx"],"names":["React","useEffect","useState","connect","Task","createTaskThunk","getTasksThunk","TaskItem","date","Date","mapStateToProps","store","tasks","createTaskReducer","TaskContainer","id","setId","toLocaleTimeString","day","toLocaleDateString","time","editTask","setEditTask","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAAQC,eAAR,EAAwBC,aAAxB,QAA4C,+BAA5C;AACA,SAAQC,QAAR,QAAuB,YAAvB;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,iBAAN,CAAwBD;AAD5B,GAAP;AAGH,CAJD;;AAMA,MAAME,aAAa,GAAG,CAAC;AAACR,EAAAA,aAAD;AAAeD,EAAAA;AAAf,CAAD,KAAqC;AACvD,QAAM,CAACU,EAAD,EAAKC,KAAL,IAAcd,QAAQ,CAACM,IAAI,CAACS,kBAAL,EAAD,CAA5B;AACA,QAAMC,GAAG,GAAGV,IAAI,CAACW,kBAAL,EAAZ;AACA,QAAMC,IAAI,GAAGZ,IAAI,CAACS,kBAAL,EAAb;AAEA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC,CALuD,CAOvD;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACmB,QAAD,gBAAY,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAGE,CAAD,IAAO;AAChClB,MAAAA,eAAe,CAACU,EAAD,EAAIQ,CAAC,CAACX,KAAN,EAAYM,GAAZ,EAAgBE,IAAhB,CAAf;AACD,KAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,gBAGE,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAIE,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJL,CADF;AAUH,CArBD;;AAuBA,eAAenB,OAAO,CAACO,eAAD,EAAkB;AAACL,EAAAA,eAAD;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAA0DQ,aAA1D,CAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport Task from \"./EditTaskInput\";\nimport {createTaskThunk,getTasksThunk} from \"../../store/createTaskReducer\";\nimport {TaskItem} from \"./TaskItem\";\n\nconst date = new Date();\n\nconst mapStateToProps = (store) => {\n    return {\n        tasks: store.createTaskReducer.tasks\n    }\n}\n\nconst TaskContainer = ({getTasksThunk,createTaskThunk}) => {\n    const [id, setId] = useState(date.toLocaleTimeString())\n    const day = date.toLocaleDateString()\n    const time = date.toLocaleTimeString()\n\n    const [editTask, setEditTask] = useState(false)\n\n    // useEffect(() => {\n    //     getTasksThunk();\n    // },[getTasksThunk()])\n\n    return(\n      <div>\n        {!editTask ? <Task onSubmit={(e) => {\n            createTaskThunk(id,e.tasks,day,time)\n          }}/>\n          :<TaskItem setEditTask = {setEditTask}/>\n\n        }\n      </div>\n    )\n}\n\nexport default connect(mapStateToProps, {createTaskThunk,getTasksThunk})(TaskContainer)"]},"metadata":{},"sourceType":"module"}