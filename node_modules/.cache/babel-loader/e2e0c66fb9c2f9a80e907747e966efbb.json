{"ast":null,"code":"import { aboutTask } from \"../DAL/dal\";\nimport { Dispatch } from 'redux';\nconst CREATE_TASK = 'create-task/reducer/CREATE_TASK';\nconst initialstate = {\n  tasks: null\n};\nexport const createTaskReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case CREATE_TASK:\n      return { ...state,\n        tasks: action.task // tasks: [...state.tasks, {...action.payload}]\n\n      };\n\n    default:\n      return state;\n  }\n};\nexport const createTaskAC = task => ({\n  type: CREATE_TASK,\n  task\n});\nconst initalId = state.tasks;\nconsole.log(initalId);\nexport const createTaskThunk = (id, task) => {\n  return async dispatch => {\n    const response = await aboutTask.postTask(id, task);\n  };\n};\nexport const getTasksThunk = () => {\n  return async dispatch => {\n    const response = await aboutTask.getTask();\n    console.log('RENDER');\n\n    if (response.status === 200) {\n      dispatch(createTaskAC(response.data));\n    }\n  }; // onClick={getTasksThunk() required}\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/store/createTaskReducer.js"],"names":["aboutTask","Dispatch","CREATE_TASK","initialstate","tasks","createTaskReducer","state","action","type","task","createTaskAC","initalId","console","log","createTaskThunk","id","dispatch","response","postTask","getTasksThunk","getTask","status","data"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,MAAMC,WAAW,GAAG,iCAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAACH,YAAP,EAAoBI,MAApB,KAA+B;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACE,IAFX,CAGH;;AAHG,OAAP;;AAKJ;AACI,aAAOH,KAAP;AARR;AAUH,CAXM;AAcP,OAAO,MAAMI,YAAY,GAAID,IAAD,KAAW;AAACD,EAAAA,IAAI,EAAEN,WAAP;AAAoBO,EAAAA;AAApB,CAAX,CAArB;AAGP,MAAME,QAAQ,GAAGL,KAAK,CAACF,KAAvB;AAEAQ,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,OAAO,MAAMG,eAAe,GAAG,CAACC,EAAD,EAAIN,IAAJ,KAAa;AACxC,SAAO,MAAOO,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMjB,SAAS,CAACkB,QAAV,CAAmBH,EAAnB,EAAsBN,IAAtB,CAAvB;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMU,aAAa,GAAI,MAAM;AAChC,SAAO,MAAOH,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAG,MAAMjB,SAAS,CAACoB,OAAV,EAAvB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAII,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzBL,MAAAA,QAAQ,CAACN,YAAY,CAACO,QAAQ,CAACK,IAAV,CAAb,CAAR;AACH;AACJ,GAND,CADgC,CAQhC;AACH,CATM","sourcesContent":["import {aboutTask} from \"../DAL/dal\";\nimport {Dispatch} from 'redux'\n\nconst CREATE_TASK = 'create-task/reducer/CREATE_TASK';\n\nconst initialstate = {\n    tasks: null\n}\n\nexport const createTaskReducer = (state=initialstate,action) => {\n    switch (action.type) {\n        case CREATE_TASK:\n            return {\n                ...state,\n                tasks: action.task\n                // tasks: [...state.tasks, {...action.payload}]\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const createTaskAC = (task) => ({type: CREATE_TASK, task })\n\n\nconst initalId = state.tasks;\n\nconsole.log(initalId)\nexport const createTaskThunk = (id,task) => {\n    return async (dispatch) => {\n        const response = await aboutTask.postTask(id,task)\n    }\n}\n\nexport const getTasksThunk =  () => {\n    return async (dispatch) => {\n        const response = await aboutTask.getTask()\n        console.log('RENDER')\n        if (response.status === 200) {\n            dispatch(createTaskAC(response.data))\n        }\n    }\n    // onClick={getTasksThunk() required}\n}\n\n"]},"metadata":{},"sourceType":"module"}