{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport EditTaskInput from \"./EditTaskInput\";\nimport { DoneTask } from \"../doneTask/doneTask\";\nexport const TasksList = ({\n  tasks,\n  deleteTaskThunk,\n  getTasksThunk,\n  inp,\n  inputId,\n  setInputId,\n  createTaskThunk,\n  done,\n  setDone,\n  textLineThroughId,\n  setTextLineThroughId,\n  editedDay,\n  editedTime\n}) => {\n  useEffect(() => {\n    getTasksThunk();\n  }, []);\n  const [editBtnVisible, setEditBtnVisible] = useState(true);\n  const [a, b, ...c] = tasks;\n  const {\n    day,\n    id,\n    task\n  } = a;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, tasks.map(task => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item task-item\",\n      key: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 32\n      }\n    }, inputId === task.id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(EditTaskInput, {\n      onSubmit: e => {\n        deleteTaskThunk(task.id);\n        createTaskThunk(task.id, e.editTask, task.day, task.time, true, editedDay, editedTime);\n        setEditBtnVisible(!editBtnVisible);\n        setInputId(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 46\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(DoneTask, {\n      task: task,\n      done: done,\n      setDone: setDone,\n      textLineThroughId: textLineThroughId,\n      setTextLineThroughId: setTextLineThroughId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-item_data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 52\n      }\n    }, \"added-\", task.day), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 52\n      }\n    }, task.time), task.edited ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 56\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 60\n      }\n    }, \"(edited)\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 60\n      }\n    }, task.editedDay, \",\", task.editedTime)) : null))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 32\n      }\n    }, editBtnVisible && inputId === task.id ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        setEditBtnVisible(!editBtnVisible);\n        setInputId(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 80\n      }\n    }, \"Back\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        inp(task.id);\n        setEditBtnVisible(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: () => deleteTaskThunk(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, \"Remove\")));\n  })));\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx"],"names":["React","useEffect","useState","EditTaskInput","DoneTask","TasksList","tasks","deleteTaskThunk","getTasksThunk","inp","inputId","setInputId","createTaskThunk","done","setDone","textLineThroughId","setTextLineThroughId","editedDay","editedTime","editBtnVisible","setEditBtnVisible","a","b","c","day","id","task","map","e","editTask","time","edited"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport EditTaskInput from \"./EditTaskInput\";\nimport {DoneTask} from \"../doneTask/doneTask\";\n\nexport const TasksList = (\n    { tasks,deleteTaskThunk,getTasksThunk,inp,inputId,setInputId,\n      createTaskThunk,done,setDone, textLineThroughId,setTextLineThroughId,\n      editedDay,editedTime\n    }) => {\n\n    useEffect(() => {\n        getTasksThunk()\n    },[])\n\n    const [editBtnVisible, setEditBtnVisible] = useState(true)\n\n    const [a,b,...c] = tasks\n    const {day,id,task} = a\n    return(\n        <div>\n            <ul className=\"list-group\">\n              {\n                 tasks.map((task)=> {\n                     return (\n                         <li className=\"list-group-item task-item\" key={task.id}>\n                               <div>\n                                   {\n                                       inputId === task.id\n                                           ?\n                                           <div>\n                                             <EditTaskInput  onSubmit = {\n                                               (e) => {\n                                                   deleteTaskThunk(task.id)\n                                                   createTaskThunk(task.id, e.editTask, task.day, task.time, true, editedDay,editedTime)\n                                                   setEditBtnVisible(!editBtnVisible);\n                                                   setInputId(null)\n                                               }}\n                                             />\n\n                                           </div>\n                                           : <div>\n                                               <DoneTask\n                                                   task={task}\n                                                   done={done}\n                                                   setDone={setDone}\n                                                   textLineThroughId={textLineThroughId}\n                                                   setTextLineThroughId={setTextLineThroughId}\n                                               />\n                                               <div className='task-item_data'>\n                                                   <span>added-{task.day}</span>\n                                                   <small>{task.time}</small>\n                                                   {task.edited ?\n                                                       <div>\n                                                           <span>(edited)</span>\n                                                           <span>{task.editedDay},\n                                                               {task.editedTime}\n                                                     </span>\n                                                       </div>\n                                                       : null\n                                                   }\n                                               </div>\n\n\n                                             </div>\n                                   }\n\n                               </div>\n\n                               <div>\n                                   {\n                                       editBtnVisible && inputId === task.id ? <button className='btn btn-primary' onClick={ () => {\n                                               setEditBtnVisible(!editBtnVisible);\n                                               setInputId(null);\n                                           }}>Back</button>\n                                       :<button className='btn btn-primary' onClick={() => {\n                                           inp(task.id);\n                                           setEditBtnVisible(true)\n                                       }}>Edit</button>\n                                   }\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteTaskThunk(task.id)}>Remove</button>\n                               </div>\n\n                         </li>\n                     )\n                 })\n              }\n            </ul>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}