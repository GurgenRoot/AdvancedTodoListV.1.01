{"ast":null,"code":"import { aboutTask } from \"../DAL/dal\";\nconst CREATE_TASK = 'create-task/reducer/CREATE_TASK';\nconst initialState = {\n  tasks: null\n};\nexport const createTaskReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case CREATE_TASK:\n      return { ...state,\n        tasks: action.task\n      };\n\n    default:\n      return state;\n  }\n};\nexport const createTaskAC = task => ({\n  type: CREATE_TASK,\n  task\n}); //\n\nexport const createTaskThunk = (id, task, day, time) => {\n  return async dispatch => {\n    console.log(\"RENDER CREATE\");\n    const response = await aboutTask.postTask(id, task, day, time);\n  };\n};\nexport const getTasksThunk = () => {\n  return async dispatch => {\n    console.log(\"RENDER GETTHUSK\");\n    const response = await aboutTask.getTask();\n    const key = Object.keys(response.data).map(key => {\n      return { ...response.data[key],\n        id: key\n      };\n    });\n\n    if (response.status === 200) {\n      dispatch(createTaskAC(key));\n    }\n  }; // onClick={getTasksThunk() required}\n}; // export const deleteTaskThunk = (id) => {\n//     return async (dispatch) => {\n//         const response = await aboutTask.deleteTask(id)\n//         console.log(id, 'deleteThunk')\n//     }\n// }","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/store/createTaskReducer.js"],"names":["aboutTask","CREATE_TASK","initialState","tasks","createTaskReducer","state","initialstate","action","type","task","createTaskAC","createTaskThunk","id","day","time","dispatch","console","log","response","postTask","getTasksThunk","getTask","key","Object","keys","data","map","status"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,YAAxB;AAEA,MAAMC,WAAW,GAAG,iCAApB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAACC,YAAP,EAAoBC,MAApB,KAA+B;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AAPR;AASH,CAVM;AAaP,OAAO,MAAMK,YAAY,GAAID,IAAD,KAAW;AAACD,EAAAA,IAAI,EAAEP,WAAP;AAAoBQ,EAAAA;AAApB,CAAX,CAArB,C,CACP;;AACA,OAAO,MAAME,eAAe,GAAG,CAACC,EAAD,EAAIH,IAAJ,EAASI,GAAT,EAAaC,IAAb,KAAsB;AACjD,SAAO,MAAOC,QAAP,IAAoB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAACmB,QAAV,CAAmBP,EAAnB,EAAsBH,IAAtB,EAA2BI,GAA3B,EAA+BC,IAA/B,CAAvB;AACH,GAHD;AAIH,CALM;AAOP,OAAO,MAAMM,aAAa,GAAI,MAAM;AAChC,SAAO,MAAOL,QAAP,IAAoB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMlB,SAAS,CAACqB,OAAV,EAAvB;AACA,UAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYN,QAAQ,CAACO,IAArB,EAA2BC,GAA3B,CAA+BJ,GAAG,IAAI;AAC9C,aAAO,EACH,GAAGJ,QAAQ,CAACO,IAAT,CAAcH,GAAd,CADA;AAEHV,QAAAA,EAAE,EAAGU;AAFF,OAAP;AAIH,KALW,CAAZ;;AAMA,QAAIJ,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;AACzBZ,MAAAA,QAAQ,CAACL,YAAY,CAACY,GAAD,CAAb,CAAR;AACH;AACJ,GAZD,CADgC,CAchC;AACH,CAfM,C,CAiBP;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {aboutTask} from \"../DAL/dal\";\n\nconst CREATE_TASK = 'create-task/reducer/CREATE_TASK';\n\nconst initialState = {\n    tasks: null\n}\n\nexport const createTaskReducer = (state=initialstate,action) => {\n    switch (action.type) {\n        case CREATE_TASK:\n            return {\n                ...state,\n                tasks: action.task\n            }\n        default:\n            return state\n    }\n}\n\n\nexport const createTaskAC = (task) => ({type: CREATE_TASK, task })\n//\nexport const createTaskThunk = (id,task,day,time) => {\n    return async (dispatch) => {\n        console.log(\"RENDER CREATE\")\n        const response = await aboutTask.postTask(id,task,day,time)\n    }\n}\n\nexport const getTasksThunk =  () => {\n    return async (dispatch) => {\n        console.log(\"RENDER GETTHUSK\")\n        const response = await aboutTask.getTask()\n        const key = Object.keys(response.data).map(key => {\n            return {\n                ...response.data[key],\n                id : key\n            }\n        })\n        if (response.status === 200) {\n            dispatch(createTaskAC(key))\n        }\n    }\n    // onClick={getTasksThunk() required}\n}\n\n// export const deleteTaskThunk = (id) => {\n//     return async (dispatch) => {\n//         const response = await aboutTask.deleteTask(id)\n//         console.log(id, 'deleteThunk')\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}