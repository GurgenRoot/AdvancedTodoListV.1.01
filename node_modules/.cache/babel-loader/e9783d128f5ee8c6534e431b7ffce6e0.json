{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport EditTaskInput from \"./EditTaskInput\";\nexport const TasksList = ({\n  tasks,\n  deleteTaskThunk,\n  getTasksThunk,\n  inp,\n  inputId,\n  setInputId,\n  createTaskThunk\n}) => {\n  useEffect(() => {\n    getTasksThunk();\n  }, []);\n  const [editBtnVisible, setEditBtnVisible] = useState(true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, tasks.map(task => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item task-item\",\n      key: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 32\n      }\n    }, inputId === task.id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(EditTaskInput, {\n      onSubmit: e => {\n        deleteTaskThunk(task.id);\n        createTaskThunk(task.id, e.editTask, task.day, task.time);\n        setEditBtnVisible(!editBtnVisible);\n        setInputId(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-item_data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 52\n      }\n    }, task.day), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 52\n      }\n    }, task.time)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        setEditBtnVisible(!editBtnVisible);\n        setInputId(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 46\n      }\n    }, \"Back\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-item_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 46\n      }\n    }, task.task)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }\n    }, editBtnVisible ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        inp(task.id);\n        setEditBtnVisible(!editBtnVisible);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 40\n      }\n    }, \"Edit\") : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: () => deleteTaskThunk(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, \"Remove\")));\n  })));\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx"],"names":["React","useEffect","useState","EditTaskInput","TasksList","tasks","deleteTaskThunk","getTasksThunk","inp","inputId","setInputId","createTaskThunk","editBtnVisible","setEditBtnVisible","map","task","id","e","editTask","day","time"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,eAAP;AAAuBC,EAAAA,aAAvB;AAAqCC,EAAAA,GAArC;AAAyCC,EAAAA,OAAzC;AAAiDC,EAAAA,UAAjD;AAA4DC,EAAAA;AAA5D,CAAD,KAAkF;AACvGV,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,IAAD,CAApD;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKG,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAS;AACf,wBACI;AAAI,MAAA,SAAS,EAAC,2BAAd;AAA0C,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQP,OAAO,KAAKM,IAAI,CAACC,EAAjB,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAgB,MAAA,QAAQ,EACrBC,CAAD,IAAO;AACHX,QAAAA,eAAe,CAACS,IAAI,CAACC,EAAN,CAAf;AACAL,QAAAA,eAAe,CAACI,IAAI,CAACC,EAAN,EAAUC,CAAC,CAACC,QAAZ,EAAsBH,IAAI,CAACI,GAA3B,EAAgCJ,IAAI,CAACK,IAArC,CAAf;AACAP,QAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAF,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOK,IAAI,CAACI,GAAZ,CADN,eAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQJ,IAAI,CAACK,IAAb,CAFN,CATF,eAaE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAG,MAAM;AAChDP,QAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAF,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CAFJ,gBAoBM;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCK,IAAI,CAACA,IAAtC,CAtBd,CADN,eA4BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQH,cAAc,gBACd;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM;AAC/CJ,QAAAA,GAAG,CAACO,IAAI,CAACC,EAAN,CAAH;AACAH,QAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACH,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADc,GAIK,IAN3B,eAQC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAiD,MAAA,OAAO,EAAE,MAAMN,eAAe,CAACS,IAAI,CAACC,EAAN,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARD,CA5BN,CADJ;AA0CH,GA3CD,CAFL,CADJ,CADJ;AAoDH,CA3DM","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport EditTaskInput from \"./EditTaskInput\";\n\nexport const TasksList = ({tasks,deleteTaskThunk,getTasksThunk,inp,inputId,setInputId,createTaskThunk}) => {\n    useEffect(() => {\n        getTasksThunk()\n    },[])\n\n    const [editBtnVisible, setEditBtnVisible] = useState(true)\n\n    return(\n        <div>\n            <ul className=\"list-group\">\n              {\n                 tasks.map((task)=> {\n                     return (\n                         <li className=\"list-group-item task-item\" key={task.id}>\n                               <div>\n                                   {\n                                       inputId === task.id\n                                           ?\n                                           <div>\n                                             <EditTaskInput  onSubmit = {\n                                               (e) => {\n                                                   deleteTaskThunk(task.id)\n                                                   createTaskThunk(task.id, e.editTask, task.day, task.time)\n                                                   setEditBtnVisible(!editBtnVisible);\n                                                   setInputId(null)\n                                               }}\n                                             />\n                                             <div className='task-item_data'>\n                                                   <span>{task.day}</span>\n                                                   <small>{task.time}</small>\n                                             </div>\n                                             <button className='btn btn-primary' onClick={ () => {\n                                                 setEditBtnVisible(!editBtnVisible);\n                                                 setInputId(null);\n                                             }}>Back</button>\n                                           </div>\n                                           : <div className='task-item_text'>{task.task}</div>\n                                   }\n\n                               </div>\n\n                               <div>\n                                   {\n                                       editBtnVisible ?\n                                       <button className='btn btn-primary' onClick={() => {\n                                           inp(task.id);\n                                           setEditBtnVisible(!editBtnVisible)\n                                       }}>Edit</button> : null\n                                   }\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteTaskThunk(task.id)}>Remove</button>\n                               </div>\n\n                         </li>\n                     )\n                 })\n              }\n            </ul>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}