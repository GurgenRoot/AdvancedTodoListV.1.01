{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx\";\nimport React, { useState } from \"react\";\nimport EditTaskInput from \"./EditTaskInput\";\nimport { CompletedTask } from \"../CompletedTasks/completedTask\";\nexport const TasksList = ({\n  tasks,\n  deleteTaskThunk,\n  getTasksThunk,\n  inp,\n  inputId,\n  setInputId,\n  createTaskThunk,\n  completeTaskThunk,\n  setCompletedTaskDay,\n  setCompletedTaskTime,\n  disabeld,\n  setDisabeld\n}) => {\n  const [editBtnVisible, setEditBtnVisible] = useState(true);\n  const [...taskes] = tasks;\n  const {\n    completedTask\n  } = taskes;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, tasks.map(task => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item task-item\",\n      key: task.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }\n    }, inputId === task.id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(EditTaskInput, {\n      onSubmit: e => {\n        deleteTaskThunk(task.id);\n        createTaskThunk(task.id, e.editTask, task.day, task.time, true);\n        setEditBtnVisible(!editBtnVisible);\n        setInputId(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 46\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(CompletedTask, {\n      task: task,\n      completeTaskThunk: completeTaskThunk,\n      getTasksThunk: getTasksThunk,\n      setCompletedTaskDay: setCompletedTaskDay,\n      setCompletedTaskTime: setCompletedTaskTime,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 48\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-item_data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 52\n      }\n    }, \"added-\", task.day), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 52\n      }\n    }, task.time)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }\n    }, editBtnVisible && inputId === task.id ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        setEditBtnVisible(!editBtnVisible);\n        setInputId(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 80\n      }\n    }, \"Back\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => {\n        inp(task.id);\n        setEditBtnVisible(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: () => deleteTaskThunk(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, \"Remove\")));\n  })));\n};","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksList.jsx"],"names":["React","useState","EditTaskInput","CompletedTask","TasksList","tasks","deleteTaskThunk","getTasksThunk","inp","inputId","setInputId","createTaskThunk","completeTaskThunk","setCompletedTaskDay","setCompletedTaskTime","disabeld","setDisabeld","editBtnVisible","setEditBtnVisible","taskes","completedTask","map","task","id","e","editTask","day","time"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,aAAR,QAA4B,iCAA5B;AAEA,OAAO,MAAMC,SAAS,GAAG,CACrB;AAAEC,EAAAA,KAAF;AAAQC,EAAAA,eAAR;AAAwBC,EAAAA,aAAxB;AAAsCC,EAAAA,GAAtC;AAA0CC,EAAAA,OAA1C;AAAkDC,EAAAA,UAAlD;AACEC,EAAAA,eADF;AACkBC,EAAAA,iBADlB;AACoCC,EAAAA,mBADpC;AACwDC,EAAAA,oBADxD;AAEEC,EAAAA,QAFF;AAEYC,EAAAA;AAFZ,CADqB,KAIf;AAEN,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAM,CAAC,GAAGkB,MAAJ,IAAcd,KAApB;AACA,QAAM;AAACe,IAAAA;AAAD,MAAkBD,MAAxB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKd,KAAK,CAACgB,GAAN,CAAWC,IAAD,IAAS;AACf,wBACI;AAAI,MAAA,SAAS,EAAC,2BAAd;AAA0C,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQd,OAAO,KAAKa,IAAI,CAACC,EAAjB,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAgB,MAAA,QAAQ,EACrBC,CAAD,IAAO;AACHlB,QAAAA,eAAe,CAACgB,IAAI,CAACC,EAAN,CAAf;AACAZ,QAAAA,eAAe,CAACW,IAAI,CAACC,EAAN,EAAUC,CAAC,CAACC,QAAZ,EAAsBH,IAAI,CAACI,GAA3B,EAAgCJ,IAAI,CAACK,IAArC,EAA2C,IAA3C,CAAf;AACAT,QAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,gBAaM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACI,MAAA,IAAI,EAAEY,IADV;AAEI,MAAA,iBAAiB,EAAEV,iBAFvB;AAGI,MAAA,aAAa,EAAIL,aAHrB;AAII,MAAA,mBAAmB,EAAIM,mBAJ3B;AAKI,MAAA,oBAAoB,EAAIC,oBAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaQ,IAAI,CAACI,GAAlB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQJ,IAAI,CAACK,IAAb,CAFJ,CARF,CAfd,CADN,eAkCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQV,cAAc,IAAIR,OAAO,KAAKa,IAAI,CAACC,EAAnC,gBAAwC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAG,MAAM;AACpFL,QAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACAP,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH,OAHmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxC,gBAIC;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAM;AAChDF,QAAAA,GAAG,CAACc,IAAI,CAACC,EAAN,CAAH;AACAL,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,OAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANT,eAWC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAiD,MAAA,OAAO,EAAE,MAAMZ,eAAe,CAACgB,IAAI,CAACC,EAAN,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXD,CAlCN,CADJ;AAmDH,GApDD,CAFL,CADJ,CADJ;AA6DH,CAxEM","sourcesContent":["import React, {useState} from \"react\";\nimport EditTaskInput from \"./EditTaskInput\";\nimport {CompletedTask} from \"../CompletedTasks/completedTask\";\n\nexport const TasksList = (\n    { tasks,deleteTaskThunk,getTasksThunk,inp,inputId,setInputId,\n      createTaskThunk,completeTaskThunk,setCompletedTaskDay,setCompletedTaskTime,\n      disabeld, setDisabeld\n    }) => {\n\n    const [editBtnVisible, setEditBtnVisible] = useState(true)\n\n    const [...taskes] = tasks\n    const {completedTask} = taskes\n\n    return(\n        <div>\n            <ul className=\"list-group\">\n              {\n                 tasks.map((task)=> {\n                     return (\n                         <li className=\"list-group-item task-item\" key={task.id}>\n                               <div>\n                                   {\n                                       inputId === task.id\n                                           ?\n                                           <div>\n                                             <EditTaskInput  onSubmit = {\n                                               (e) => {\n                                                   deleteTaskThunk(task.id)\n                                                   createTaskThunk(task.id, e.editTask, task.day, task.time, true)\n                                                   setEditBtnVisible(!editBtnVisible)\n                                                   setInputId(null)\n                                               }}\n                                             />\n\n                                           </div>\n                                           : <div>\n                                               <CompletedTask\n                                                   task={task}\n                                                   completeTaskThunk={completeTaskThunk}\n                                                   getTasksThunk = {getTasksThunk}\n                                                   setCompletedTaskDay = {setCompletedTaskDay}\n                                                   setCompletedTaskTime = {setCompletedTaskTime}\n                                               />\n                                               <div className='task-item_data'>\n                                                   <span>added-{task.day}</span>\n                                                   <small>{task.time}</small>\n                                               </div>\n\n                                             </div>\n                                   }\n\n                               </div>\n\n                               <div>\n                                   {\n                                       editBtnVisible && inputId === task.id ? <button className='btn btn-primary' onClick={ () => {\n                                               setEditBtnVisible(!editBtnVisible);\n                                               setInputId(null);\n                                           }}>Back</button>\n                                       :<button className='btn btn-primary' onClick={() => {\n                                           inp(task.id);\n                                           setEditBtnVisible(true)\n                                       }}>Edit</button>\n                                   }\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => deleteTaskThunk(task.id)}>Remove</button>\n                               </div>\n\n                         </li>\n                     )\n                 })\n              }\n            </ul>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}