{"ast":null,"code":"var _jsxFileName = \"/home/gurgen/Desktop/new-app/src/components/CompletedTasks/completedTask.jsx\";\nimport React from \"react\";\nimport './completedTask.scss';\nimport { TaskCompleteTime } from \"./TaskCompleteTime\";\nimport withReactContent from 'sweetalert2-react-content';\nimport divWithClassName from \"react-bootstrap/cjs/divWithClassName\";\nconst MySwal = withReactContent(Swal);\nexport const CompletedTask = ({\n  task,\n  completeTaskThunk,\n  setCompletedTaskDay,\n  setCompletedTaskTime\n}) => {\n  console.log('DONETASK_RENDER');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: task.completedTask ? `task-item_text text` : `task-item_text`,\n    onClick: () => {\n      MySwal.fire({\n        title: \"! HEY did you complete this tasks?\",\n        text: 'Check it',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: `Yes, I\\'ve done!`\n      }).then(result => {\n        if (result.value) {\n          Swal.fire('Congratulations!', 'OK You can move on to other task.', 'success');\n          completeTaskThunk(task.id, setCompletedTaskDay, setCompletedTaskTime, true);\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TaskCompleteTime, {\n    task: task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })));\n}; // <div>{task.task} {task.edited ? <span>(edited)</span> : null}</div>","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/CompletedTasks/completedTask.jsx"],"names":["React","TaskCompleteTime","withReactContent","divWithClassName","MySwal","Swal","CompletedTask","task","completeTaskThunk","setCompletedTaskDay","setCompletedTaskTime","console","log","completedTask","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AAEA,MAAMC,MAAM,GAAGF,gBAAgB,CAACG,IAAD,CAA/B;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA,iBAAN;AAAwBC,EAAAA,mBAAxB;AAA4CC,EAAAA;AAA5C,CAAD,KAAuE;AAEhGC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAGL,IAAI,CAACM,aAAL,GAAsB,qBAAtB,GAA8C,gBAA/D;AACK,IAAA,OAAO,EAAG,MAAM;AACZT,MAAAA,MAAM,CAACU,IAAP,CAAY;AACRC,QAAAA,KAAK,EAAG,oCADA;AAERC,QAAAA,IAAI,EAAE,UAFE;AAGRC,QAAAA,IAAI,EAAE,UAHE;AAIRC,QAAAA,gBAAgB,EAAE,IAJV;AAKRC,QAAAA,kBAAkB,EAAE,SALZ;AAMRC,QAAAA,iBAAiB,EAAE,MANX;AAORC,QAAAA,iBAAiB,EAAG;AAPZ,OAAZ,EAQGC,IARH,CAQSC,MAAD,IAAY;AAChB,YAAIA,MAAM,CAACC,KAAX,EAAkB;AACdnB,UAAAA,IAAI,CAACS,IAAL,CACI,kBADJ,EAEI,mCAFJ,EAGI,SAHJ;AAKAN,UAAAA,iBAAiB,CAACD,IAAI,CAACkB,EAAN,EAAShB,mBAAT,EAA6BC,oBAA7B,EAAkD,IAAlD,CAAjB;AACH;AACJ,OAjBD;AAkBH,KApBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEH,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAzBJ,CADJ;AA+BH,CAlCM,C,CAoCP","sourcesContent":["import React from \"react\";\nimport './completedTask.scss';\nimport {TaskCompleteTime} from \"./TaskCompleteTime\";\nimport withReactContent from 'sweetalert2-react-content'\nimport divWithClassName from \"react-bootstrap/cjs/divWithClassName\";\n\nconst MySwal = withReactContent(Swal)\n\nexport const CompletedTask = ({task,completeTaskThunk,setCompletedTaskDay,setCompletedTaskTime}) => {\n\n    console.log('DONETASK_RENDER')\n    return(\n        <div>\n            <div className= {task.completedTask ? `task-item_text text` : `task-item_text` }\n                 onClick={ () => {\n                     MySwal.fire({\n                         title:  \"! HEY did you complete this tasks?\",\n                         text: 'Check it',\n                         icon: 'question',\n                         showCancelButton: true,\n                         confirmButtonColor: '#3085d6',\n                         cancelButtonColor: '#d33',\n                         confirmButtonText: `Yes, I\\'ve done!`\n                     }).then((result) => {\n                         if (result.value) {\n                             Swal.fire(\n                                 'Congratulations!',\n                                 'OK You can move on to other task.',\n                                 'success'\n                             )\n                             completeTaskThunk(task.id,setCompletedTaskDay,setCompletedTaskTime,true)\n                         }\n                     })\n                 }}\n            >\n\n            </div>\n            <div>\n                <TaskCompleteTime task={task}/>\n            </div>\n        </div>\n    )\n}\n\n// <div>{task.task} {task.edited ? <span>(edited)</span> : null}</div>"]},"metadata":{},"sourceType":"module"}