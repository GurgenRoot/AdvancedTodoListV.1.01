{"ast":null,"code":"import _slicedToArray from\"/home/gurgen/Desktop/new-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{TasksList}from\"./TasksList\";import{connect}from\"react-redux\";import{deleteTaskThunk,getTasksThunk,createTaskThunk,completeTaskThunk}from\"../../store/createTaskReducer\";import{SearchInput}from\"../SearchInput/SearchInput\";var mapStateToProps=function mapStateToProps(store){return{tasks:store.createTaskReducer.tasks//.filter(task => task.task === 'Task')\n};};var TaskListContainer=function TaskListContainer(_ref){var tasks=_ref.tasks,deleteTaskThunk=_ref.deleteTaskThunk,getTasksThunk=_ref.getTasksThunk,createTaskThunk=_ref.createTaskThunk,completeTaskThunk=_ref.completeTaskThunk;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),targetValue=_useState2[0],setTargetValue=_useState2[1];var task=Object.values(tasks).filter(function(task){return task.task.includes(targetValue);});var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),inputId=_useState4[0],setInputId=_useState4[1];var inpId=function inpId(id){var task=tasks.filter(function(task){return task.id===id;});setInputId(task[0].id);};return/*#__PURE__*/React.createElement(\"div\",null,task.length===0?/*#__PURE__*/React.createElement(\"div\",{className:\"no-task\"},\"NO TASK\"):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(SearchInput,{setTargetValue:setTargetValue}),/*#__PURE__*/React.createElement(TasksList,{getTasksThunk:getTasksThunk,createTaskThunk:createTaskThunk,deleteTaskThunk:deleteTaskThunk,completeTaskThunk:completeTaskThunk,tasks:task,inpId:inpId,inputId:inputId,setInputId:setInputId,setCompletedTaskDay:task,setCompletedTaskTime:task})));};export default connect(mapStateToProps,{deleteTaskThunk:deleteTaskThunk,getTasksThunk:getTasksThunk,createTaskThunk:createTaskThunk,completeTaskThunk:completeTaskThunk})(TaskListContainer);","map":{"version":3,"sources":["/home/gurgen/Desktop/new-app/src/components/TasksList/TasksListContainer.jsx"],"names":["React","useState","TasksList","connect","deleteTaskThunk","getTasksThunk","createTaskThunk","completeTaskThunk","SearchInput","mapStateToProps","store","tasks","createTaskReducer","TaskListContainer","targetValue","setTargetValue","task","Object","values","filter","includes","inputId","setInputId","inpId","id","length"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,SAAR,KAAwB,aAAxB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,eAAR,CAAyBC,aAAzB,CAAuCC,eAAvC,CAAuDC,iBAAvD,KAA+E,+BAA/E,CACA,OAAQC,WAAR,KAA0B,4BAA1B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAM,CACFC,KAAK,CAAED,KAAK,CAACE,iBAAN,CAAwBD,KAAM;AADnC,CAAN,CAGH,CAJD,CAMA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAA6E,IAA3EF,CAAAA,KAA2E,MAA3EA,KAA2E,CAArEP,eAAqE,MAArEA,eAAqE,CAArDC,aAAqD,MAArDA,aAAqD,CAAvCC,eAAuC,MAAvCA,eAAuC,CAAvBC,iBAAuB,MAAvBA,iBAAuB,eAC7DN,QAAQ,CAAC,EAAD,CADqD,wCAC5Fa,WAD4F,eAC/EC,cAD+E,eAGnG,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACC,MAAP,CAAcP,KAAd,EAAqBQ,MAArB,CAA4B,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACA,IAAL,CAAUI,QAAV,CAAmBN,WAAnB,CAAJ,EAAhC,CAAb,CAHmG,eAKnEb,QAAQ,CAAC,IAAD,CAL2D,yCAK5FoB,OAL4F,eAKlFC,UALkF,eAOnG,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,EAAD,CAAQ,CAClB,GAAMR,CAAAA,IAAI,CAAGL,KAAK,CAACQ,MAAN,CAAa,SAAAH,IAAI,QAAIA,CAAAA,IAAI,CAACQ,EAAL,GAAYA,EAAhB,EAAjB,CAAb,CACAF,UAAU,CAACN,IAAI,CAAC,CAAD,CAAJ,CAAQQ,EAAT,CAAV,CACH,CAHD,CAKA,mBACI,+BAEQR,IAAI,CAACS,MAAL,GAAgB,CAAhB,cACM,2BAAK,SAAS,CAAC,SAAf,YADN,cAEM,4CACE,oBAAC,WAAD,EAAa,cAAc,CAAGV,cAA9B,EADF,cAEE,oBAAC,SAAD,EAAW,aAAa,CAAEV,aAA1B,CACW,eAAe,CAAEC,eAD5B,CAEW,eAAe,CAAEF,eAF5B,CAGW,iBAAiB,CAAEG,iBAH9B,CAIW,KAAK,CAAES,IAJlB,CAKW,KAAK,CAAEO,KALlB,CAMW,OAAO,CAAEF,OANpB,CAOW,UAAU,CAAEC,UAPvB,CAQW,mBAAmB,CAAEN,IARhC,CASW,oBAAoB,CAAEA,IATjC,EAFF,CAJd,CADJ,CAsBH,CAlCD,CAoCA,cAAeb,CAAAA,OAAO,CAACM,eAAD,CAAiB,CAACL,eAAe,CAAfA,eAAD,CAAiBC,aAAa,CAAbA,aAAjB,CAA+BC,eAAe,CAAfA,eAA/B,CAA+CC,iBAAiB,CAAjBA,iBAA/C,CAAjB,CAAP,CAA2FM,iBAA3F,CAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {TasksList} from \"./TasksList\";\nimport {connect} from \"react-redux\";\nimport {deleteTaskThunk, getTasksThunk,createTaskThunk,completeTaskThunk} from \"../../store/createTaskReducer\";\nimport {SearchInput} from \"../SearchInput/SearchInput\";\n\nconst mapStateToProps = (store) => {\n    return{\n        tasks: store.createTaskReducer.tasks //.filter(task => task.task === 'Task')\n    }\n}\n\nconst TaskListContainer = ({tasks,deleteTaskThunk,getTasksThunk,createTaskThunk,completeTaskThunk}) => {\n    const [targetValue, setTargetValue] = useState('')\n\n    const task = Object.values(tasks).filter(task => task.task.includes(targetValue))\n\n    const [inputId , setInputId ] = useState(null)\n\n    const inpId = (id) => {\n        const task = tasks.filter(task => task.id === id)\n        setInputId(task[0].id)\n    }\n\n    return (\n        <div>\n            {\n                task.length === 0\n                    ? <div className='no-task'>NO TASK</div>\n                    : <div>\n                        <SearchInput setTargetValue ={setTargetValue}/>\n                        <TasksList getTasksThunk={getTasksThunk}\n                                   createTaskThunk={createTaskThunk}\n                                   deleteTaskThunk={deleteTaskThunk}\n                                   completeTaskThunk={completeTaskThunk}\n                                   tasks={task}\n                                   inpId={inpId}\n                                   inputId={inputId}\n                                   setInputId={setInputId}\n                                   setCompletedTaskDay={task}\n                                   setCompletedTaskTime={task}\n                        />\n                      </div>\n            }\n        </div>\n    )\n};\n\nexport default connect(mapStateToProps,{deleteTaskThunk,getTasksThunk,createTaskThunk,completeTaskThunk})(TaskListContainer)"]},"metadata":{},"sourceType":"module"}